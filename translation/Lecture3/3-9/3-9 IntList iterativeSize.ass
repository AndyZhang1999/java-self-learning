[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 3-9 IntList iterativeSize.mp4
Video File: 3-9 IntList iterativeSize.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 36
Active Line: 64

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 备注 - 侧边,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,0,7,36,23,32,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 片头 - 集数,微软雅黑,116,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色,微软雅黑,40,&H00FCFCFC,&H000000FF,&H00275F34,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色 - 背景,微软雅黑,66,&H00275F34,&H000000FF,&H00275F34,&H004848C5,0,0,0,0,100,125,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 红色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 红色 - 背景,微软雅黑,45,&H00614B86,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,103,110,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00584408,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色 - 背景,微软雅黑,70,&H00584408,&H00614B86,&H00584408,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00C98E36,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝 - 背景,微软雅黑,40,&H00D9C2A5,&H00614B86,&H00D9C2A5,&H004848C5,0,0,0,0,118,117,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00566B0A,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿 - 背景,微软雅黑,50,&H00566B0A,&H00614B86,&H00566B0A,&H004848C5,0,0,0,0,100,172,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000E0645,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右下深红 - 背景,微软雅黑,40,&H000E0645,&H00614B86,&H000E0645,&H004848C5,0,0,0,0,106,148,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00484BF1,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红 - 背景,微软雅黑,40,&H00484BF1,&H00614B86,&H00484BF1,&H004848C5,0,0,0,0,120,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002E2A28,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色 - 背景,微软雅黑,40,&H002E2A28,&H00614B86,&H002E2A28,&H004848C5,0,0,0,0,111,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00050D55,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红 - 背景,微软雅黑,40,&H00050D55,&H00614B86,&H00050D55,&H004848C5,0,0,0,0,100,108,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000575E0,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色 - 背景,微软雅黑,40,&H000575E0,&H00614B86,&H000575E0,&H004848C5,0,0,0,0,120,140,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00B3B3B3,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色 - 背景,微软雅黑,40,&H00B3B3B3,&H00614B86,&H00B3B3B3,&H004848C5,0,0,0,0,140,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00AD7141,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色 - Copy,微软雅黑,40,&H00AD7141,&H00614B86,&H00AD7141,&H004848C5,0,0,0,0,150,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002D2B2B,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色 - Copy,微软雅黑,40,&H002D2B2B,&H00614B86,&H002D2B2B,&H004848C5,0,0,0,0,100,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00000563,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红 - Copy,微软雅黑,40,&H00000563,&H00614B86,&H00000563,&H004848C5,0,0,0,0,105,119,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001065BC,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色 - Copy,微软雅黑,40,&H00377DC1,&H00614B86,&H00377DC1,&H004848C5,0,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00273D54,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色 - Copy,微软雅黑,40,&H00273D54,&H00614B86,&H00273D54,&H004848C5,0,0,0,0,104,109,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001F2BA0,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下 - Copy,微软雅黑,40,&H001F2BA0,&H00614B86,&H001F2BA0,&H004848C5,0,0,0,0,112,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00FCCB58,&H004848C5,-1,0,0,0,100,100,1,0,1,0,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上 - 背景,微软雅黑,75,&H00FCCB58,&H00614B86,&H00FCCB58,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中 - 背景,微软雅黑,40,&H002E3E1C,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,120,188,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中 - 背景,微软雅黑,40,&H009A32EF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下 - 背景,微软雅黑,45,&H00846D08,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中 - Copy,微软雅黑,80,&H00067EB6,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,165,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下 - Copy,微软雅黑,80,&H00965F09,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,195,114,1,0,3,3,0,2,3,3,14,1
Style: 备注 - 中间,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,8,36,23,32,1
Style: 备注 - 主题,微软雅黑,48,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,1,7,36,23,158,1
Style: 这一集的名字,微软雅黑,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,36,43,40,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.83,0:00:02.38,en - 白色,,0,0,0,,This method works totally fine.
Dialogue: 0,0:00:00.83,0:00:02.38,zh - 黄色,,0,0,0,,这种方法工作得很好
Dialogue: 0,0:00:02.38,0:00:04.76,en - 白色,,0,0,0,,There's no reason you can't use the size and, in fact,
Dialogue: 0,0:00:02.38,0:00:04.76,zh - 黄色,,0,0,0,,你没有理由不使用这个方法
Dialogue: 0,0:00:04.76,0:00:06.46,en - 白色,,0,0,0,,I think it's pretty much the best solution.
Dialogue: 0,0:00:04.76,0:00:06.46,zh - 黄色,,0,0,0,,我认为这几乎是最好的解决方案
Dialogue: 0,0:00:07.20,0:00:10.75,en - 白色,,0,0,0,,However, we should, for the sake of just seeing the other pattern,
Dialogue: 0,0:00:07.20,0:00:10.75,zh - 黄色,,0,0,0,,然而我们应该看看另一种模式
Dialogue: 0,0:00:10.82,0:00:14.62,en - 白色,,0,0,0,,look at how this would be done iteratively even though I don't personally like it quite as much.
Dialogue: 0,0:00:10.82,0:00:14.62,zh - 黄色,,0,0,0,,如何使用迭代实现，尽管我不喜欢这种
Dialogue: 0,0:00:15.60,0:00:18.48,en - 白色,,0,0,0,,So to do that, I'm going to create a new method called iterative size.
Dialogue: 0,0:00:15.60,0:00:18.48,zh - 黄色,,0,0,0,,创建一个新方法 interactiveSize
Dialogue: 0,0:00:19.03,0:00:26.00,en - 白色,,0,0,0,,And it is going to return the size of the list using iteration.
Dialogue: 0,0:00:19.03,0:00:26.00,zh - 黄色,,0,0,0,,它将使用迭代来返回 List 的大小
Dialogue: 0,0:00:27.26,0:00:28.55,en - 白色,,0,0,0,,Or I'll just say no recursion.
Dialogue: 0,0:00:27.26,0:00:28.55,zh - 黄色,,0,0,0,,或者说没有递归
Dialogue: 0,0:00:29.90,0:00:32.18,en - 白色,,0,0,0,,And as before, I recommend that you try and guess
Dialogue: 0,0:00:29.90,0:00:32.18,zh - 黄色,,0,0,0,,像以前一样，我建议你试着猜猜
Dialogue: 0,0:00:32.18,0:00:35.20,en - 白色,,0,0,0,,what I'm about to do and then see how your answer compares to mine.
Dialogue: 0,0:00:32.18,0:00:35.20,zh - 黄色,,0,0,0,,我接下来要做什么，然后比较你和我的答案
Dialogue: 0,0:00:36.23,0:00:40.38,en - 白色,,0,0,0,,So in this case, a common pattern is to create a pointer variable.
Dialogue: 0,0:00:36.23,0:00:40.38,zh - 黄色,,0,0,0,,在这种情况下，常见的模式是创建一个指针变量
Dialogue: 0,0:00:40.88,0:00:44.04,en - 白色,,0,0,0,,So I'm going to call it p, and then I'm going to set it equal to this.
Dialogue: 0,0:00:40.88,0:00:44.04,zh - 黄色,,0,0,0,,我把它命名为 p，然后设为 this
Dialogue: 0,0:00:44.87,0:00:48.42,en - 白色,,0,0,0,,And I'm also going to set up a total size variable.
Dialogue: 0,0:00:44.87,0:00:48.42,zh - 黄色,,0,0,0,,再设置一个 totalSize 变量
Dialogue: 0,0:00:49.08,0:00:50.55,en - 白色,,0,0,0,,I'm going to set that equal to zero.
Dialogue: 0,0:00:49.08,0:00:50.55,zh - 黄色,,0,0,0,,把它设为0
Dialogue: 0,0:00:51.05,0:00:53.53,en - 白色,,0,0,0,,And then I'm going to say as long as p is not equal to null,
Dialogue: 0,0:00:51.05,0:00:53.53,zh - 黄色,,0,0,0,,只要 p 不等于 null
Dialogue: 0,0:00:53.84,0:00:54.82,en - 白色,,0,0,0,,I'm going to do the following.
Dialogue: 0,0:00:53.84,0:00:54.82,zh - 黄色,,0,0,0,,就要做以下几件事
Dialogue: 0,0:00:55.38,0:00:57.93,en - 白色,,0,0,0,,I'm going to say total size plus equals 1.
Dialogue: 0,0:00:55.38,0:00:57.93,zh - 黄色,,0,0,0,,totalSize += 1
Dialogue: 0,0:00:57.93,0:00:59.27,en - 白色,,0,0,0,,So it's going to get one larger.
Dialogue: 0,0:00:57.93,0:00:59.27,zh - 黄色,,0,0,0,,所以它会变大
Dialogue: 0,0:00:59.27,0:01:01.55,en - 白色,,0,0,0,,And then p is going to be equal to p.rest.
Dialogue: 0,0:00:59.27,0:01:01.55,zh - 黄色,,0,0,0,,p = p.rest
Dialogue: 0,0:01:02.21,0:01:07.06,en - 白色,,0,0,0,,And in that way, p is going to step along until finally total size is returned.
Dialogue: 0,0:01:02.21,0:01:07.06,zh - 黄色,,0,0,0,,这样 p 就会继续前进，直到最终返回 totalSize
Dialogue: 0,0:01:08.46,0:01:10.28,en - 白色,,0,0,0,,So let's try running this code.
Dialogue: 0,0:01:08.46,0:01:10.28,zh - 黄色,,0,0,0,,试着运行这段代码
Dialogue: 0,0:01:12.17,0:01:13.26,en - 白色,,0,0,0,,This will test it here.
Dialogue: 0,0:01:12.17,0:01:13.26,zh - 黄色,,0,0,0,,在这里测试它
Dialogue: 0,0:01:14.60,0:01:15.65,en - 白色,,0,0,0,,It worked.
Dialogue: 0,0:01:14.60,0:01:15.65,zh - 黄色,,0,0,0,,成功了
Dialogue: 0,0:01:15.65,0:01:16.73,en - 白色,,0,0,0,,And why?
Dialogue: 0,0:01:15.65,0:01:16.73,zh - 黄色,,0,0,0,,为什么？
Dialogue: 0,0:01:16.73,0:01:18.42,en - 白色,,0,0,0,,Let's try doing the visualization.
Dialogue: 0,0:01:16.73,0:01:18.42,zh - 黄色,,0,0,0,,做一下可视化
Dialogue: 0,0:01:22.88,0:01:25.64,en - 白色,,0,0,0,,So as before, we step forward until we get to iterate size.
Dialogue: 0,0:01:22.88,0:01:25.64,zh - 黄色,,0,0,0,,像以前一样，前进直到 interactiveSize
Dialogue: 0,0:01:25.64,0:01:27.77,en - 白色,,0,0,0,,And when that method kicks off, we're going to say,
Dialogue: 0,0:01:25.64,0:01:27.77,zh - 黄色,,0,0,0,,当这个方法开始时，我们会说
Dialogue: 0,0:01:27.77,0:01:30.53,en - 白色,,0,0,0,,you know what, p is going to be equal to this,
Dialogue: 0,0:01:27.77,0:01:30.53,zh - 黄色,,0,0,0,,p 会等于 this
Dialogue: 0,0:01:31.69,0:01:33.60,en - 白色,,0,0,0,,and then I'm going to set the total size equal to zero.
Dialogue: 0,0:01:31.69,0:01:33.60,zh - 黄色,,0,0,0,,totalSize 设为0
Dialogue: 0,0:01:34.40,0:01:37.40,en - 白色,,0,0,0,,Now as long as p is not null, I'm going to step through,
Dialogue: 0,0:01:34.40,0:01:37.40,zh - 黄色,,0,0,0,,只要 p 不为 null，就持续向前
Dialogue: 0,0:01:37.40,0:01:40.04,en - 白色,,0,0,0,,and I'm going to say, if the total size is larger
Dialogue: 0,0:01:37.40,0:01:40.04,zh - 黄色,,0,0,0,,totalSize 变大
Dialogue: 0,0:01:40.74,0:01:42.09,en - 白色,,0,0,0,,and p should step forward.
Dialogue: 0,0:01:40.74,0:01:42.09,zh - 黄色,,0,0,0,,p 前进一步
Dialogue: 0,0:01:42.59,0:01:43.44,en - 白色,,0,0,0,,We come back around.
Dialogue: 0,0:01:42.59,0:01:43.44,zh - 黄色,,0,0,0,,又回来
Dialogue: 0,0:01:43.67,0:01:46.86,en - 白色,,0,0,0,,Total size plus equals 1. p is steps 4.
Dialogue: 0,0:01:43.67,0:01:46.86,zh - 黄色,,0,0,0,,totalSize 加1，p 前进
Dialogue: 0,0:01:48.11,0:01:50.40,en - 白色,,0,0,0,,Finally, p is pointing at the last item on the list,
Dialogue: 0,0:01:48.11,0:01:50.40,zh - 黄色,,0,0,0,,最后 p 指向 List 中的最后一项
Dialogue: 0,0:01:50.97,0:01:53.07,en - 白色,,0,0,0,,so we could say total size plus 1,
Dialogue: 0,0:01:50.97,0:01:53.07,zh - 黄色,,0,0,0,,totalSize 加1
Dialogue: 0,0:01:53.07,0:01:56.53,en - 白色,,0,0,0,,p equals p.rest, in which case it will get set equal to null.
Dialogue: 0,0:01:53.07,0:01:56.53,zh - 黄色,,0,0,0,,p = p.rest，在这种情况下，它将被设置为 null
Dialogue: 0,0:01:56.69,0:01:57.48,en - 白色,,0,0,0,,And now we're done.
Dialogue: 0,0:01:56.69,0:01:57.48,zh - 黄色,,0,0,0,,结束了
Dialogue: 0,0:01:57.86,0:01:59.44,en - 白色,,0,0,0,,And we're going to return total size.
Dialogue: 0,0:01:57.86,0:01:59.44,zh - 黄色,,0,0,0,,返回 totalSize
Dialogue: 0,0:02:00.38,0:02:03.65,en - 白色,,0,0,0,,Now you could do something where you start to size off at 1,
Dialogue: 0,0:02:00.38,0:02:03.65,zh - 黄色,,0,0,0,,你可以做些改变，比如从1开始计算
Dialogue: 0,0:02:03.65,0:02:06.41,en - 白色,,0,0,0,,and you instead check p.rest does not equal to null.
Dialogue: 0,0:02:03.65,0:02:06.41,zh - 黄色,,0,0,0,,检查 p.rest 不等于 null
Dialogue: 0,0:02:06.41,0:02:07.72,en - 白色,,0,0,0,,Either approach is fine.
Dialogue: 0,0:02:06.41,0:02:07.72,zh - 黄色,,0,0,0,,任何一种方法都可以
Dialogue: 0,0:02:07.72,0:02:09.08,en - 白色,,0,0,0,,This is just the one I have happened to have picked.
Dialogue: 0,0:02:07.72,0:02:09.08,zh - 黄色,,0,0,0,,我碰巧这样写
Dialogue: 0,0:02:09.32,0:02:13.32,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:02:09.33,0:02:13.32,en - 白色,,0,0,0,,And that will give us an iterative size method.
Dialogue: 0,0:02:09.33,0:02:13.32,zh - 黄色,,0,0,0,,这就是迭代的方法
