[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 3-4 Parameter Passing.mp4
Video File: 3-4 Parameter Passing.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 85
Active Line: 94
Video Position: 9868

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 备注 - 侧边,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,0,7,36,23,32,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 片头 - 集数,微软雅黑,116,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色,微软雅黑,40,&H00FCFCFC,&H000000FF,&H00275F34,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色 - 背景,微软雅黑,66,&H00275F34,&H000000FF,&H00275F34,&H004848C5,0,0,0,0,100,125,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 红色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 红色 - 背景,微软雅黑,45,&H00614B86,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,103,110,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00584408,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色 - 背景,微软雅黑,70,&H00584408,&H00614B86,&H00584408,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00C98E36,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝 - 背景,微软雅黑,40,&H00D9C2A5,&H00614B86,&H00D9C2A5,&H004848C5,0,0,0,0,118,117,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00566B0A,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿 - 背景,微软雅黑,50,&H00566B0A,&H00614B86,&H00566B0A,&H004848C5,0,0,0,0,100,172,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000E0645,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右下深红 - 背景,微软雅黑,40,&H000E0645,&H00614B86,&H000E0645,&H004848C5,0,0,0,0,106,148,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00484BF1,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红 - 背景,微软雅黑,40,&H00484BF1,&H00614B86,&H00484BF1,&H004848C5,0,0,0,0,120,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002E2A28,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色 - 背景,微软雅黑,40,&H002E2A28,&H00614B86,&H002E2A28,&H004848C5,0,0,0,0,111,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00050D55,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红 - 背景,微软雅黑,40,&H00050D55,&H00614B86,&H00050D55,&H004848C5,0,0,0,0,100,108,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000575E0,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色 - 背景,微软雅黑,40,&H000575E0,&H00614B86,&H000575E0,&H004848C5,0,0,0,0,120,140,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00B3B3B3,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色 - 背景,微软雅黑,40,&H00B3B3B3,&H00614B86,&H00B3B3B3,&H004848C5,0,0,0,0,140,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00AD7141,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色 - Copy,微软雅黑,40,&H00AD7141,&H00614B86,&H00AD7141,&H004848C5,0,0,0,0,150,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002D2B2B,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色 - Copy,微软雅黑,40,&H002D2B2B,&H00614B86,&H002D2B2B,&H004848C5,0,0,0,0,100,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00000563,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红 - Copy,微软雅黑,40,&H00000563,&H00614B86,&H00000563,&H004848C5,0,0,0,0,105,119,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001065BC,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色 - Copy,微软雅黑,40,&H00377DC1,&H00614B86,&H00377DC1,&H004848C5,0,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00273D54,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色 - Copy,微软雅黑,40,&H00273D54,&H00614B86,&H00273D54,&H004848C5,0,0,0,0,104,109,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001F2BA0,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下 - Copy,微软雅黑,40,&H001F2BA0,&H00614B86,&H001F2BA0,&H004848C5,0,0,0,0,112,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00FCCB58,&H004848C5,-1,0,0,0,100,100,1,0,1,0,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上 - 背景,微软雅黑,75,&H00FCCB58,&H00614B86,&H00FCCB58,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中 - 背景,微软雅黑,40,&H002E3E1C,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,120,188,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中 - 背景,微软雅黑,40,&H009A32EF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下 - 背景,微软雅黑,45,&H00846D08,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中 - Copy,微软雅黑,80,&H00067EB6,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,165,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下 - Copy,微软雅黑,80,&H00965F09,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,195,114,1,0,3,3,0,2,3,3,14,1
Style: 备注 - 中间,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,8,36,23,32,1
Style: 备注 - 主题,微软雅黑,48,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,1,7,36,23,158,1
Style: 这一集的名字,微软雅黑,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,36,43,40,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.66,0:00:05.84,en - 白色,,0,0,0,,Now let's go a little further than the mystery of the walrus and talk about what happens when we pass parameters to functions.
Dialogue: 0,0:00:00.66,0:00:05.84,zh - 黄色,,0,0,0,,学习完海象之谜，讨论一下函数的参数传递
Dialogue: 0,0:00:06.39,0:00:11.34,en - 白色,,0,0,0,,So it turns out that the golden rule of equals also applies to passing of parameters in Java.
Dialogue: 0,0:00:06.39,0:00:11.34,zh - 黄色,,0,0,0,,事实证明，等号的黄金法则也适用于 Java 中的参数传递
Dialogue: 0,0:00:11.66,0:00:12.84,en - 白色,,0,0,0,,The golden rule of equals, remember,
Dialogue: 0,0:00:11.66,0:00:12.84,zh - 黄色,,0,0,0,,记住等号的黄金法则
Dialogue: 0,0:00:12.84,0:00:14.64,en - 白色,,0,0,0,,is just given variables b and a,
Dialogue: 0,0:00:12.84,0:00:14.64,zh - 黄色,,0,0,0,,已知变量 b 和 a
Dialogue: 0,0:00:14.71,0:00:18.24,en - 白色,,0,0,0,,if we say b equals a, we copy all the bits from a into b.
Dialogue: 0,0:00:14.71,0:00:18.24,zh - 黄色,,0,0,0,,b = a 就是把 a 的所有位复制到 b
Dialogue: 0,0:00:19.30,0:00:22.15,en - 白色,,0,0,0,,So the same thing happens when you pass parameters to a function.
Dialogue: 0,0:00:19.30,0:00:22.15,zh - 黄色,,0,0,0,,将参数传递给函数时也会发生同样的事情
Dialogue: 0,0:00:22.98,0:00:29.06,en - 白色,,0,0,0,,What you're going to do is whatever bits you want to give to the function are going to be copied to the new scope.
Dialogue: 0,0:00:22.98,0:00:29.06,zh - 黄色,,0,0,0,,你要给函数提供的任何位都将被复制到新的作用域中
Dialogue: 0,0:00:29.92,0:00:33.08,en - 白色,,0,0,0,,So let's see an example that makes it clear what's going on.
Dialogue: 0,0:00:29.92,0:00:33.08,zh - 黄色,,0,0,0,,看一个例子来清楚地说明
Dialogue: 0,0:00:33.58,0:00:35.17,en - 白色,,0,0,0,,Here's a function called average.
Dialogue: 0,0:00:33.58,0:00:35.17,zh - 黄色,,0,0,0,,这是一个叫 average 的函数
Dialogue: 0,0:00:35.17,0:00:36.02,en - 白色,,0,0,0,,It's not very glamorous.
Dialogue: 0,0:00:35.17,0:00:36.02,zh - 黄色,,0,0,0,,它不深奥
Dialogue: 0,0:00:36.24,0:00:39.20,en - 白色,,0,0,0,,All it does is take a couple of doubles and return their average.
Dialogue: 0,0:00:36.24,0:00:39.20,zh - 黄色,,0,0,0,,就是返回 double 类型参数的平均值
Dialogue: 0,0:00:39.48,0:00:42.73,en - 白色,,0,0,0,,But we're going to use this as an example of this rule.
Dialogue: 0,0:00:39.48,0:00:42.73,zh - 黄色,,0,0,0,,我们以此为例来说明这条规则
Dialogue: 0,0:00:43.59,0:00:51.15,en - 白色,,0,0,0,,So when I run main, what it's going to do is first create a double variable that's 64 bits and fill in this box here with 5.5.
Dialogue: 0,0:00:43.59,0:00:51.15,zh - 黄色,,0,0,0,,运行 main 时，首先创建一个64位的 double 变量，然后用5.5填充这个盒子
Dialogue: 0,0:00:51.75,0:00:53.82,en - 白色,,0,0,0,,Then y will be 10.5.
Dialogue: 0,0:00:51.75,0:00:53.82,zh - 黄色,,0,0,0,,那么 y 就是10.5
Dialogue: 0,0:00:54.33,0:00:56.93,en - 白色,,0,0,0,,And then finally, we're going to make a call to the average function.
Dialogue: 0,0:00:54.33,0:00:56.93,zh - 黄色,,0,0,0,,最后要调用 average 函数
Dialogue: 0,0:00:57.20,0:01:02.80,en - 白色,,0,0,0,,So what that means is we're going to take these bits and hand them over, hand copies of them over to the average function,
Dialogue: 0,0:00:57.20,0:01:02.80,zh - 黄色,,0,0,0,,这意味着我们要把这些位的副本交给 average 函数
Dialogue: 0,0:01:02.97,0:01:07.04,en - 白色,,0,0,0,,and it's going to store them in its own scope.
Dialogue: 0,0:01:02.97,0:01:07.04,zh - 黄色,,0,0,0,,函数会将它们存储在自己的作用域中
Dialogue: 0,0:01:07.29,0:01:09.96,en - 白色,,0,0,0,,So it's going to have local a and b--
Dialogue: 0,0:01:07.29,0:01:09.96,zh - 黄色,,0,0,0,,所以会有局部的 a 和 b
Dialogue: 0,0:01:09.96,0:01:14.24,en - 白色,,0,0,0,,these are these variables that are usable only by average--
Dialogue: 0,0:01:09.96,0:01:14.24,zh - 黄色,,0,0,0,,这些变量只能被 average 使用
Dialogue: 0,0:01:14.51,0:01:15.91,en - 白色,,0,0,0,,and it's going to copy those bits in.
Dialogue: 0,0:01:14.51,0:01:15.91,zh - 黄色,,0,0,0,,它会把这些位复制进来
Dialogue: 0,0:01:16.56,0:01:17.35,en - 白色,,0,0,0,,So that's the scoop.
Dialogue: 0,0:01:16.56,0:01:17.35,zh - 黄色,,0,0,0,,这就是作用域
Dialogue: 0,0:01:17.91,0:01:20.20,en - 白色,,0,0,0,,It's not that there's some arrows pointing back.
Dialogue: 0,0:01:17.91,0:01:20.20,zh - 黄色,,0,0,0,,没有箭头只想后面
Dialogue: 0,0:01:20.52,0:01:24.39,en - 白色,,0,0,0,,Instead, what is happening is the actual bits are copied into these boxes.
Dialogue: 0,0:01:20.52,0:01:24.39,zh - 黄色,,0,0,0,,而是实际的位被复制到这些盒子中
Dialogue: 0,0:01:24.39,0:01:26.11,en - 白色,,0,0,0,,So notice there's no arrows pointing back.
Dialogue: 0,0:01:24.39,0:01:26.11,zh - 黄色,,0,0,0,,请注意，没有箭头指向后面
Dialogue: 0,0:01:27.21,0:01:32.17,en - 白色,,0,0,0,,This idea of making actual copies of the bits is sometimes called pass by value.
Dialogue: 0,0:01:27.21,0:01:32.17,zh - 黄色,,0,0,0,,这种产生位的真实副本的方式有时称为“值传递”
Dialogue: 0,0:01:32.61,0:01:37.75,en - 白色,,0,0,0,,Now we're not really going to use that term so much in our class, but it might be useful to you at some job interview.
Dialogue: 0,0:01:32.61,0:01:37.75,zh - 黄色,,0,0,0,,课上不会经常使用这个词，但在面试中很有用
Dialogue: 0,0:01:37.98,0:01:41.73,en - 白色,,0,0,0,,But basically, in Java, you always pass by value.
Dialogue: 0,0:01:37.98,0:01:41.73,zh - 黄色,,0,0,0,,Java 中总是按值传递
Dialogue: 0,0:01:41.73,0:01:44.60,en - 白色,,0,0,0,,In other words, you always copy the bits.
Dialogue: 0,0:01:41.73,0:01:44.60,zh - 黄色,,0,0,0,,也就是说总是复制这些位
Dialogue: 0,0:01:45.15,0:01:47.61,en - 白色,,0,0,0,,So let's see a little summary of what we've learned so far.
Dialogue: 0,0:01:45.15,0:01:47.61,zh - 黄色,,0,0,0,,现在看一下我们到目前为止所学内容的小结
Dialogue: 0,0:01:47.61,0:01:50.55,en - 白色,,0,0,0,,And then I'm going to give you guys a challenge to make sure this all makes sense.
Dialogue: 0,0:01:47.61,0:01:50.55,zh - 黄色,,0,0,0,,然后我会给你们一个挑战确保理解
Dialogue: 0,0:01:51.58,0:01:53.73,en - 白色,,0,0,0,,So to summarize everything we've got so far,
Dialogue: 0,0:01:51.58,0:01:53.73,zh - 黄色,,0,0,0,,总结一下我们目前掌握的一切
Dialogue: 0,0:01:54.30,0:01:56.04,en - 白色,,0,0,0,,there are nine types of variables in Java.
Dialogue: 0,0:01:54.30,0:01:56.04,zh - 黄色,,0,0,0,,Java 中有9种类型的变量
Dialogue: 0,0:01:56.28,0:01:58.08,en - 白色,,0,0,0,,First, there are eight primitive types,
Dialogue: 0,0:01:56.28,0:01:58.08,zh - 黄色,,0,0,0,,有8种基本类型
Dialogue: 0,0:01:58.92,0:02:03.26,en - 白色,,0,0,0,,and then we have a ninth type, or just a set of types,
Dialogue: 0,0:01:58.92,0:02:03.26,zh - 黄色,,0,0,0,,还有第9种类型，或者称为一组类型
Dialogue: 0,0:02:03.26,0:02:09.55,en - 白色,,0,0,0,,I guess you can say, which is references to objects, which could be planets, arrays, walruses, whatever.
Dialogue: 0,0:02:03.26,0:02:09.55,zh - 黄色,,0,0,0,,可以说是对对象的引用，可以是行星、数组、海象等等
Dialogue: 0,0:02:10.66,0:02:14.80,en - 白色,,0,0,0,,And those references, we're going to think of them as arrows, but they may also be null.
Dialogue: 0,0:02:10.66,0:02:14.80,zh - 黄色,,0,0,0,,那些引用被视为箭头，它们也可能是 null
Dialogue: 0,0:02:16.02,0:02:17.93,en - 白色,,0,0,0,,So in this box and pointer notation
Dialogue: 0,0:02:16.02,0:02:17.93,zh - 黄色,,0,0,0,,在这个盒子和指针表示法中
Dialogue: 0,0:02:17.93,0:02:19.77,en - 白色,,0,0,0,,we're going to use for the rest of the class
Dialogue: 0,0:02:17.93,0:02:19.77,zh - 黄色,,0,0,0,,我们在课程剩余部分都将使用
Dialogue: 0,0:02:19.77,0:02:22.15,en - 白色,,0,0,0,,and especially with understanding our data structures,
Dialogue: 0,0:02:19.77,0:02:22.15,zh - 黄色,,0,0,0,,尤其是学习数据结构时
Dialogue: 0,0:02:22.51,0:02:25.93,en - 白色,,0,0,0,,each variable right here is going to be drawn as a box.
Dialogue: 0,0:02:22.51,0:02:25.93,zh - 黄色,,0,0,0,,每个变量都将被画成一个盒子
Dialogue: 0,0:02:26.11,0:02:27.41,en - 白色,,0,0,0,,And it's going to have a label.
Dialogue: 0,0:02:26.11,0:02:27.41,zh - 黄色,,0,0,0,,它会有一个标签
Dialogue: 0,0:02:27.41,0:02:31.24,en - 白色,,0,0,0,,So here's a box labeled a, a box labeled b, a box labeled x, and so forth.
Dialogue: 0,0:02:27.41,0:02:31.24,zh - 黄色,,0,0,0,,这里是标记为 a 的盒子，标记为 b 的盒子，标记为 x 的盒子，以此类推
Dialogue: 0,0:02:31.54,0:02:33.55,en - 白色,,0,0,0,,So every variable is going to have a little box.
Dialogue: 0,0:02:31.54,0:02:33.55,zh - 黄色,,0,0,0,,每个变量都会有一个小盒子
Dialogue: 0,0:02:33.93,0:02:39.42,en - 白色,,0,0,0,,And we're going to show the values for that variable are going to be shown in that box.
Dialogue: 0,0:02:33.93,0:02:39.42,zh - 黄色,,0,0,0,,我们会在盒子中显示该变量的值
Dialogue: 0,0:02:40.05,0:02:42.33,en - 白色,,0,0,0,,Now, rather than show a bunch of binary digits,
Dialogue: 0,0:02:40.05,0:02:42.33,zh - 黄色,,0,0,0,,与其显示一堆二进制数字
Dialogue: 0,0:02:42.33,0:02:44.06,en - 白色,,0,0,0,,we're going to write them in human readable format.
Dialogue: 0,0:02:42.33,0:02:44.06,zh - 黄色,,0,0,0,,不如以人类可读的格式写出它们
Dialogue: 0,0:02:44.46,0:02:48.48,en - 白色,,0,0,0,,For primitive types, that means writing things like five or 3.5 or a.
Dialogue: 0,0:02:44.46,0:02:48.48,zh - 黄色,,0,0,0,,对于基本类型，写成类似于5或3.5或 a 的东西
Dialogue: 0,0:02:48.92,0:02:51.86,en - 白色,,0,0,0,,And for reference types, instead of writing out a binary address,
Dialogue: 0,0:02:48.92,0:02:51.86,zh - 黄色,,0,0,0,,对于引用类型，不会写出二进制地址
Dialogue: 0,0:02:51.95,0:02:56.13,en - 白色,,0,0,0,,we're going to represent it by arrows, which are going to point at specific instances.
Dialogue: 0,0:02:51.95,0:02:56.13,zh - 黄色,,0,0,0,,而是用箭头表示它，箭头指向具体的实例
Dialogue: 0,0:02:57.00,0:03:02.94,en - 白色,,0,0,0,,And the golden rule in terms of understanding how the equals operator works in Java
Dialogue: 0,0:02:57.00,0:03:02.94,zh - 黄色,,0,0,0,,理解等号的黄金法则，它在 Java 中是一条金科玉律
Dialogue: 0,0:03:02.94,0:03:06.69,en - 白色,,0,0,0,,and how function parameters are passed is simple.
Dialogue: 0,0:03:02.94,0:03:06.69,zh - 黄色,,0,0,0,,函数参数的传递方式也很简单
Dialogue: 0,0:03:06.69,0:03:08.95,en - 白色,,0,0,0,,When you say b equals a, you're going to copy the bits.
Dialogue: 0,0:03:06.69,0:03:08.95,zh - 黄色,,0,0,0,,b = a 就是复制这些位
Dialogue: 0,0:03:09.43,0:03:12.03,en - 白色,,0,0,0,,Whenever you pass parameters, you're going to copy the bits.
Dialogue: 0,0:03:09.43,0:03:12.03,zh - 黄色,,0,0,0,,无论何时传递参数都要复制这些位
Dialogue: 0,0:03:10.82,0:03:13.82,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:03:12.03,0:03:13.82,en - 白色,,0,0,0,,That's it.
Dialogue: 0,0:03:12.03,0:03:13.82,zh - 黄色,,0,0,0,,就这样
