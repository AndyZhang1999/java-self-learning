[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 4-5 addLast and size.mp4
Video File: 4-5 addLast and size.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 128
Active Line: 146
Video Position: 14807

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 备注 - 侧边,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,0,7,36,23,32,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 片头 - 集数,微软雅黑,116,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色,微软雅黑,40,&H00FCFCFC,&H000000FF,&H00275F34,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 绿色 - 背景,微软雅黑,66,&H00275F34,&H000000FF,&H00275F34,&H004848C5,0,0,0,0,100,125,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 红色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 红色 - 背景,微软雅黑,45,&H00614B86,&H00614B86,&H00614B86,&H004848C5,-1,0,0,0,103,110,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00584408,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 左下蓝色 - 背景,微软雅黑,70,&H00584408,&H00614B86,&H00584408,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00C98E36,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 中间浅蓝 - 背景,微软雅黑,40,&H00D9C2A5,&H00614B86,&H00D9C2A5,&H004848C5,0,0,0,0,118,117,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00566B0A,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右上 - 深绿 - 背景,微软雅黑,50,&H00566B0A,&H00614B86,&H00566B0A,&H004848C5,0,0,0,0,100,172,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 右下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000E0645,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 右下深红 - 背景,微软雅黑,40,&H000E0645,&H00614B86,&H000E0645,&H004848C5,0,0,0,0,106,148,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00484BF1,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左上亮红 - 背景,微软雅黑,40,&H00484BF1,&H00614B86,&H00484BF1,&H004848C5,0,0,0,0,120,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002E2A28,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 左下灰色 - 背景,微软雅黑,40,&H002E2A28,&H00614B86,&H002E2A28,&H004848C5,0,0,0,0,111,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00050D55,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 中下深红 - 背景,微软雅黑,40,&H00050D55,&H00614B86,&H00050D55,&H004848C5,0,0,0,0,100,108,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H000575E0,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右上橙色 - 背景,微软雅黑,40,&H000575E0,&H00614B86,&H000575E0,&H004848C5,0,0,0,0,120,140,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00B3B3B3,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第二幕 - 右下灰色 - 背景,微软雅黑,40,&H00B3B3B3,&H00614B86,&H00B3B3B3,&H004848C5,0,0,0,0,140,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00AD7141,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左上蓝色 - Copy,微软雅黑,40,&H00AD7141,&H00614B86,&H00AD7141,&H004848C5,0,0,0,0,150,120,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H002D2B2B,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左中深色 - Copy,微软雅黑,40,&H002D2B2B,&H00614B86,&H002D2B2B,&H004848C5,0,0,0,0,100,122,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00000563,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右上深红 - Copy,微软雅黑,40,&H00000563,&H00614B86,&H00000563,&H004848C5,0,0,0,0,105,119,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001065BC,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右下橙色 - Copy,微软雅黑,40,&H00377DC1,&H00614B86,&H00377DC1,&H004848C5,0,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00273D54,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 右中灰色 - Copy,微软雅黑,40,&H00273D54,&H00614B86,&H00273D54,&H004848C5,0,0,0,0,104,109,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下,微软雅黑,40,&H00FCFCFC,&H00614B86,&H001F2BA0,&H004848C5,-1,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第三幕 - 左 - 下 - Copy,微软雅黑,40,&H001F2BA0,&H00614B86,&H001F2BA0,&H004848C5,0,0,0,0,112,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上,微软雅黑,40,&H00FCFCFC,&H00614B86,&H00FCCB58,&H004848C5,-1,0,0,0,100,100,1,0,1,0,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左 - 上 - 背景,微软雅黑,75,&H00FCCB58,&H00614B86,&H00FCCB58,&H004848C5,0,0,0,0,100,100,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 中 - 背景,微软雅黑,40,&H002E3E1C,&H00614B86,&H002E3E1C,&H004848C5,-1,0,0,0,120,188,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左中 - 背景,微软雅黑,40,&H009A32EF,&H00614B86,&H009A32EF,&H004848C5,-1,0,0,0,120,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 左下 - 背景,微软雅黑,45,&H00846D08,&H00614B86,&H00846D08,&H004848C5,-1,0,0,0,100,130,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右中 - Copy,微软雅黑,80,&H00067EB6,&H00614B86,&H00067EB6,&H004848C5,-1,0,0,0,165,114,1,0,3,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下,微软雅黑,40,&H00FFFFFF,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: 片头 - 第四幕 - 右下 - Copy,微软雅黑,80,&H00965F09,&H00614B86,&H00965F09,&H004848C5,-1,0,0,0,195,114,1,0,3,3,0,2,3,3,14,1
Style: 备注 - 中间,微软雅黑,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,8,36,23,32,1
Style: 备注 - 主题,微软雅黑,48,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,1,7,36,23,158,1
Style: 这一集的名字,微软雅黑,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,36,43,40,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.89,0:00:03.53,en - 白色,,0,0,0,,So far, our SLList class has these two methods,
Dialogue: 0,0:00:00.89,0:00:03.53,zh - 黄色,,0,0,0,,到目前为止，我们的 SLList 类有两个方法
Dialogue: 0,0:00:03.75,0:00:06.62,en - 白色,,0,0,0,,and we made a sequence of these four non-obvious improvements.
Dialogue: 0,0:00:03.75,0:00:06.62,zh - 黄色,,0,0,0,,并做了四个不明显的改进
Dialogue: 0,0:00:07.34,0:00:10.11,en - 白色,,0,0,0,,And we want our SLList to gain even more power, and more capabilities,
Dialogue: 0,0:00:07.34,0:00:10.11,zh - 黄色,,0,0,0,,我们希望 SLList 获得更多的功能
Dialogue: 0,0:00:10.11,0:00:14.44,en - 白色,,0,0,0,,and go off and grow up and do whatever it is that SLList do in adulthood.
Dialogue: 0,0:00:10.11,0:00:14.44,zh - 黄色,,0,0,0,,然后离开成长为一个真正的 SLList
Dialogue: 0,0:00:14.66,0:00:17.64,en - 白色,,0,0,0,,And to get there, what we're going to do is add two additional methods--
Dialogue: 0,0:00:14.66,0:00:17.64,zh - 黄色,,0,0,0,,为了这一点，我们要增加两个额外的方法
Dialogue: 0,0:00:17.87,0:00:19.17,en - 白色,,0,0,0,,addLast and size--
Dialogue: 0,0:00:17.87,0:00:19.17,zh - 黄色,,0,0,0,,addLast 和 size
Dialogue: 0,0:00:19.57,0:00:23.11,en - 白色,,0,0,0,,partially because we want to get a little more practice just building data structures,
Dialogue: 0,0:00:19.57,0:00:23.11,zh - 黄色,,0,0,0,,既为了获得更多构建数据结构的练习
Dialogue: 0,0:00:23.31,0:00:28.42,en - 白色,,0,0,0,,but also because I want some motivation for the other two non-obvious improvements we're going to do.
Dialogue: 0,0:00:23.31,0:00:28.42,zh - 黄色,,0,0,0,,又因为我想激励我们去做另外两个不明显的改进
Dialogue: 0,0:00:29.19,0:00:30.82,en - 白色,,0,0,0,,So what I'm going to recommend you do
Dialogue: 0,0:00:29.19,0:00:30.82,zh - 黄色,,0,0,0,,所以我建议
Dialogue: 0,0:00:31.10,0:00:35.46,en - 白色,,0,0,0,,is try writing addLast or size on your own, maybe on paper,
Dialogue: 0,0:00:31.10,0:00:35.46,zh - 黄色,,0,0,0,,试着自己写 addLast 或 size，也许是写在纸上
Dialogue: 0,0:00:36.05,0:00:37.57,en - 白色,,0,0,0,,and then watch me do it here.
Dialogue: 0,0:00:36.05,0:00:37.57,zh - 黄色,,0,0,0,,然后再看我写
Dialogue: 0,0:00:37.88,0:00:40.04,en - 白色,,0,0,0,,So I'm going to start with addLast.
Dialogue: 0,0:00:37.88,0:00:40.04,zh - 黄色,,0,0,0,,我将从 addLast 开始
Dialogue: 0,0:00:41.40,0:00:42.75,en - 白色,,0,0,0,,So I'm going to call this method--
Dialogue: 0,0:00:41.40,0:00:42.75,zh - 黄色,,0,0,0,,把这个方法称为...
Dialogue: 0,0:00:43.46,0:00:44.42,en - 白色,,0,0,0,,it's going to be, oops--
Dialogue: 0,0:00:43.46,0:00:44.42,zh - 黄色,,0,0,0,,这将会是...
Dialogue: 0,0:00:44.90,0:00:49.46,en - 白色,,0,0,0,,public void addLast int x.
Dialogue: 0,0:00:44.90,0:00:49.46,zh - 黄色,,0,0,0,,public void addLast(int x)
Dialogue: 0,0:00:50.03,0:00:51.83,en - 白色,,0,0,0,,And in keeping with normal Java convention,
Dialogue: 0,0:00:50.03,0:00:51.83,zh - 黄色,,0,0,0,,为了与常规的 Java 约定保持一致
Dialogue: 0,0:00:51.83,0:00:53.28,en - 白色,,0,0,0,,I will put it above main.
Dialogue: 0,0:00:51.83,0:00:53.28,zh - 黄色,,0,0,0,,我会把它放在 main 上方
Dialogue: 0,0:00:54.26,0:00:58.57,en - 白色,,0,0,0,,And this adds an item to the end of the list.
Dialogue: 0,0:00:54.26,0:00:58.57,zh - 黄色,,0,0,0,,它向 List 的尾部添加一个元素
Dialogue: 0,0:01:00.64,0:01:01.73,en - 白色,,0,0,0,,So what might this look like?
Dialogue: 0,0:01:00.64,0:01:01.73,zh - 黄色,,0,0,0,,应该是什么样呢？
Dialogue: 0,0:01:01.87,0:01:03.62,en - 白色,,0,0,0,,Well, I'm going to write it iteratively.
Dialogue: 0,0:01:01.87,0:01:03.62,zh - 黄色,,0,0,0,,我将使用迭代的方式编写
Dialogue: 0,0:01:03.62,0:01:04.91,en - 白色,,0,0,0,,You can also do it recursively.
Dialogue: 0,0:01:03.62,0:01:04.91,zh - 黄色,,0,0,0,,你也可以使用递归
Dialogue: 0,0:01:04.91,0:01:06.56,en - 白色,,0,0,0,,I'm going to do it iteratively.
Dialogue: 0,0:01:04.91,0:01:06.56,zh - 黄色,,0,0,0,,我会使用迭代
Dialogue: 0,0:01:06.93,0:01:09.44,en - 白色,,0,0,0,,And it's going to look a lot like what we did in the previous lecture.
Dialogue: 0,0:01:06.93,0:01:09.44,zh - 黄色,,0,0,0,,它跟我们上节课做的很像
Dialogue: 0,0:01:10.41,0:01:13.20,en - 白色,,0,0,0,,So I'm going to say, int list p equals first.
Dialogue: 0,0:01:10.41,0:01:13.20,zh - 黄色,,0,0,0,,IntList p = first
Dialogue: 0,0:01:13.82,0:01:17.91,en - 白色,,0,0,0,,And then I'm going to say, while p.next is not equal to null,
Dialogue: 0,0:01:13.82,0:01:17.91,zh - 黄色,,0,0,0,,然后是 while (p.next != null)
Dialogue: 0,0:01:20.14,0:01:21.79,en - 白色,,0,0,0,,p equals p.next.
Dialogue: 0,0:01:20.14,0:01:21.79,zh - 黄色,,0,0,0,,p = p.next
Dialogue: 0,0:01:21.79,0:01:23.42,en - 白色,,0,0,0,,And the goal of this little chunk of code-- oops--
Dialogue: 0,0:01:21.79,0:01:23.42,zh - 黄色,,0,0,0,,这一小段代码的目标是...
Dialogue: 0,0:01:24.04,0:01:29.28,en - 白色,,0,0,0,,the goal of this little chunk of code is to scan p to the end of the list.
Dialogue: 0,0:01:24.04,0:01:29.28,zh - 黄色,,0,0,0,,是将 p 扫描到 List 的尾部
Dialogue: 0,0:01:29.63,0:01:34.77,en - 白色,,0,0,0,,So move p until it reaches the end of the list.
Dialogue: 0,0:01:29.63,0:01:34.77,zh - 黄色,,0,0,0,,移动 p 直到 List 的尾部
Dialogue: 0,0:01:35.51,0:01:38.30,en - 白色,,0,0,0,,And once you've done that, you can simply--
Dialogue: 0,0:01:35.51,0:01:38.30,zh - 黄色,,0,0,0,,完成后，你就可以简单地...
Dialogue: 0,0:01:38.30,0:01:45.08,en - 白色,,0,0,0,,jeez-- you can just simply say, p.next equals new int node x null. OK?
Dialogue: 0,0:01:38.30,0:01:45.08,zh - 黄色,,0,0,0,,很简单 p.next = new IntNode(x, null)
Dialogue: 0,0:01:46.06,0:01:47.26,en - 白色,,0,0,0,,So that's addLast.
Dialogue: 0,0:01:46.06,0:01:47.26,zh - 黄色,,0,0,0,,这就是 addLast
Dialogue: 0,0:01:49.15,0:01:54.13,en - 白色,,0,0,0,,We can also do l.addLast, let's say 20.
Dialogue: 0,0:01:49.15,0:01:54.13,zh - 黄色,,0,0,0,,我们也可以调用 L.addLast()，比方说20
Dialogue: 0,0:01:55.02,0:01:57.82,en - 白色,,0,0,0,,And if we run this, let's see what happens. OK.
Dialogue: 0,0:01:55.02,0:01:57.82,zh - 黄色,,0,0,0,,运行这个，让我们看看会发生什么
Dialogue: 0,0:01:57.82,0:01:58.73,en - 白色,,0,0,0,,Any errors?
Dialogue: 0,0:01:57.82,0:01:58.73,zh - 黄色,,0,0,0,,有什么错误吗？
Dialogue: 0,0:02:06.88,0:02:09.80,en - 白色,,0,0,0,,Oh, int node. Oops. Int node.
Dialogue: 0,0:02:06.88,0:02:09.80,zh - 黄色,,0,0,0,,啊 IntNode
Dialogue: 0,0:02:10.25,0:02:13.66,en - 白色,,0,0,0,,So we run this, and it runs, and the first item is 5.
Dialogue: 0,0:02:10.25,0:02:13.66,zh - 黄色,,0,0,0,,运行它，显示第一项是5
Dialogue: 0,0:02:14.23,0:02:15.82,en - 白色,,0,0,0,,Now, of course, running this code,
Dialogue: 0,0:02:14.23,0:02:15.82,zh - 黄色,,0,0,0,,现在运行这段代码
Dialogue: 0,0:02:15.82,0:02:17.71,en - 白色,,0,0,0,,it is not clear that it worked properly.
Dialogue: 0,0:02:15.82,0:02:17.71,zh - 黄色,,0,0,0,,还不清楚它是否工作正常
Dialogue: 0,0:02:17.71,0:02:19.81,en - 白色,,0,0,0,,And in fact, if you look at our list of methods,
Dialogue: 0,0:02:17.71,0:02:19.81,zh - 黄色,,0,0,0,,事实上，如果你看看我们的方法列表
Dialogue: 0,0:02:19.81,0:02:23.26,en - 白色,,0,0,0,,there's no way that we can see what the last item even is.
Dialogue: 0,0:02:19.81,0:02:23.26,zh - 黄色,,0,0,0,,根本没法看到最后一项
Dialogue: 0,0:02:23.50,0:02:25.09,en - 白色,,0,0,0,,So we could add additional methods,
Dialogue: 0,0:02:23.50,0:02:25.09,zh - 黄色,,0,0,0,,所以我们可以添加额外的方法
Dialogue: 0,0:02:25.09,0:02:26.42,en - 白色,,0,0,0,,but instead, what I'm going to do
Dialogue: 0,0:02:25.09,0:02:26.42,zh - 黄色,,0,0,0,,但是相反，我要做的是
Dialogue: 0,0:02:26.92,0:02:34.42,en - 白色,,0,0,0,,is I am going to use our Java visualizer and see what we get.
Dialogue: 0,0:02:26.92,0:02:34.42,zh - 黄色,,0,0,0,,使用 Java visualizer 看看我们会得到什么
Dialogue: 0,0:02:35.07,0:02:36.60,en - 白色,,0,0,0,,So after this code finishes running,
Dialogue: 0,0:02:35.07,0:02:36.60,zh - 黄色,,0,0,0,,运行完这段代码后
Dialogue: 0,0:02:36.97,0:02:40.77,en - 白色,,0,0,0,,we end up getting a layout that looks something like this.
Dialogue: 0,0:02:36.97,0:02:40.77,zh - 黄色,,0,0,0,,我们最终得到了一个类似于下面的布局
Dialogue: 0,0:02:41.68,0:02:44.30,en - 白色,,0,0,0,,The l variable points that our middle man,
Dialogue: 0,0:02:41.68,0:02:44.30,zh - 黄色,,0,0,0,,变量 L 指向中间人
Dialogue: 0,0:02:44.30,0:02:48.51,en - 白色,,0,0,0,,which has a first variable that then points at our naked recursive data structure.
Dialogue: 0,0:02:44.30,0:02:48.51,zh - 黄色,,0,0,0,,它有第一个变量，然后指向我们的裸递归数据结构
Dialogue: 0,0:02:49.14,0:02:50.35,en - 白色,,0,0,0,,And I'll make one little note--
Dialogue: 0,0:02:49.14,0:02:50.35,zh - 黄色,,0,0,0,,做一个小笔记
Dialogue: 0,0:02:50.70,0:02:57.28,en - 白色,,0,0,0,,if you try running this code on your own and you end up getting a visualization that looks something like this--
Dialogue: 0,0:02:50.70,0:02:57.28,zh - 黄色,,0,0,0,,如果你试着自己运行这段代码，最后得到的可视化效果是这样的
Dialogue: 0,0:02:57.75,0:02:59.42,en - 白色,,0,0,0,,like a nested structure--
Dialogue: 0,0:02:57.75,0:02:59.42,zh - 黄色,,0,0,0,,像一个嵌套的结构
Dialogue: 0,0:03:00.15,0:03:02.66,en - 白色,,0,0,0,,it's just another visual representation of the same thing.
Dialogue: 0,0:03:00.15,0:03:02.66,zh - 黄色,,0,0,0,,这只是另一种视觉表现
Dialogue: 0,0:03:02.94,0:03:04.26,en - 白色,,0,0,0,,If you don't want that to happen,
Dialogue: 0,0:03:02.94,0:03:04.26,zh - 黄色,,0,0,0,,如果你不想让这种情况发生
Dialogue: 0,0:03:04.54,0:03:07.79,en - 白色,,0,0,0,,make sure that you click Preferred, Non-nesting, and Vertical layouts.
Dialogue: 0,0:03:04.54,0:03:07.79,zh - 黄色,,0,0,0,,确保选择“首选非嵌套和垂直布局”
Dialogue: 0,0:03:07.79,0:03:10.59,en - 白色,,0,0,0,,So just a quick note, if you want box and pointer diagrams,
Dialogue: 0,0:03:07.79,0:03:10.59,zh - 黄色,,0,0,0,,简单说明一下，如果你需要框图和指针图
Dialogue: 0,0:03:10.59,0:03:12.77,en - 白色,,0,0,0,,you've got to click that box for our lists.
Dialogue: 0,0:03:10.59,0:03:12.77,zh - 黄色,,0,0,0,,你必须点击那个框才能看到我们的 List
Dialogue: 0,0:03:14.11,0:03:15.08,en - 白色,,0,0,0,,So that's getBack.
Dialogue: 0,0:03:14.11,0:03:15.08,zh - 黄色,,0,0,0,,这就是 getBack
Dialogue: 0,0:03:15.96,0:03:18.06,en - 白色,,0,0,0,,So what about size?
Dialogue: 0,0:03:15.96,0:03:18.06,zh - 黄色,,0,0,0,,那么 size 呢？
Dialogue: 0,0:03:18.45,0:03:20.00,en - 白色,,0,0,0,,What might size look like?
Dialogue: 0,0:03:18.45,0:03:20.00,zh - 黄色,,0,0,0,,size 应该是什么样的？
Dialogue: 0,0:03:20.61,0:03:22.80,en - 白色,,0,0,0,,Now, this one, if you didn't do addLast--
Dialogue: 0,0:03:20.61,0:03:22.80,zh - 黄色,,0,0,0,,如果你没有尝试 addList
Dialogue: 0,0:03:22.80,0:03:27.00,en - 白色,,0,0,0,,if you just sat there and watched me do it, that's OK. I won't be too upset.
Dialogue: 0,0:03:22.80,0:03:27.00,zh - 黄色,,0,0,0,,你只是坐在那里看我做，没关系我不会很难过
Dialogue: 0,0:03:27.18,0:03:28.86,en - 白色,,0,0,0,,But this one, I want you to really try.
Dialogue: 0,0:03:27.18,0:03:28.86,zh - 黄色,,0,0,0,,但这次，我希望你真的试一试
Dialogue: 0,0:03:28.86,0:03:30.24,en - 白色,,0,0,0,,I want you to really think about it.
Dialogue: 0,0:03:28.86,0:03:30.24,zh - 黄色,,0,0,0,,我想让你好好思考一下
Dialogue: 0,0:03:30.72,0:03:34.56,en - 白色,,0,0,0,,Look at the instance variables here, and think, what should size look like?
Dialogue: 0,0:03:30.72,0:03:34.56,zh - 黄色,,0,0,0,,看看这里的实例变量，想一想 size 应该是什么样子
Dialogue: 0,0:03:34.56,0:03:35.62,en - 白色,,0,0,0,,Try writing it out.
Dialogue: 0,0:03:34.56,0:03:35.62,zh - 黄色,,0,0,0,,试着把它写出来
Dialogue: 0,0:03:38.14,0:03:40.15,en - 白色,,0,0,0,,That's my way of trying to stare you into trying it.
Dialogue: 0,0:03:38.14,0:03:40.15,zh - 黄色,,0,0,0,,这就是我想吓唬你试一试的方式
Dialogue: 0,0:03:41.82,0:03:42.64,en - 白色,,0,0,0,,All right.
Dialogue: 0,0:03:41.82,0:03:42.64,zh - 黄色,,0,0,0,,好的
Dialogue: 0,0:03:43.62,0:03:45.46,en - 白色,,0,0,0,,So if you tried it, which hopefully you did,
Dialogue: 0,0:03:43.62,0:03:45.46,zh - 黄色,,0,0,0,,所以如果你试过了，希望你已经试过了
Dialogue: 0,0:03:46.26,0:03:49.37,en - 白色,,0,0,0,,you'll find that trying to figure out what the base case is is tricky.
Dialogue: 0,0:03:46.26,0:03:49.37,zh - 黄色,,0,0,0,,你会发现，很难找出 base case
Dialogue: 0,0:03:50.23,0:03:53.31,en - 白色,,0,0,0,,You also find that the recursive case is just equally strange.
Dialogue: 0,0:03:50.23,0:03:53.31,zh - 黄色,,0,0,0,,你还会发现递归情况也同样奇怪
Dialogue: 0,0:03:53.48,0:04:00.77,en - 白色,,0,0,0,,It's like if I want to do the recursive case like we did in the previous lecture,
Dialogue: 0,0:03:53.48,0:04:00.77,zh - 黄色,,0,0,0,,就像我们上节课的做的递归
Dialogue: 0,0:04:00.77,0:04:06.37,en - 白色,,0,0,0,,it would seem that you want to do something like return first.next size--
Dialogue: 0,0:04:00.77,0:04:06.37,zh - 黄色,,0,0,0,,你应该做类似的东西，比如 return first.next.size
Dialogue: 0,0:04:06.78,0:04:09.56,en - 白色,,0,0,0,,who knows, like, some kind of recursive case,
Dialogue: 0,0:04:06.78,0:04:09.56,zh - 黄色,,0,0,0,,类似这样的递归条件
Dialogue: 0,0:04:09.56,0:04:10.66,en - 白色,,0,0,0,,and you get a little stuck.
Dialogue: 0,0:04:09.56,0:04:10.66,zh - 黄色,,0,0,0,,然后你就会有点卡住了
Dialogue: 0,0:04:11.37,0:04:15.13,en - 白色,,0,0,0,,So the issue here is that the size method--
Dialogue: 0,0:04:11.37,0:04:15.13,zh - 黄色,,0,0,0,,所以这里的问题是 size 方法...
Dialogue: 0,0:04:16.07,0:04:20.19,en - 白色,,0,0,0,,when we're writing it for SLList, the SLList data structure itself is not recursive.
Dialogue: 0,0:04:16.07,0:04:20.19,zh - 黄色,,0,0,0,,当我们为 SLList 编写它时，SLList 数据结构本身不是递归的
Dialogue: 0,0:04:20.19,0:04:22.06,en - 白色,,0,0,0,,It does not have SLList pointers.
Dialogue: 0,0:04:20.19,0:04:22.06,zh - 黄色,,0,0,0,,它没有 SLList 指针
Dialogue: 0,0:04:22.62,0:04:25.31,en - 白色,,0,0,0,,So the common strategy that we'll adopt--
Dialogue: 0,0:04:22.62,0:04:25.31,zh - 黄色,,0,0,0,,所以我们要采取的共同策略是...
Dialogue: 0,0:04:25.31,0:04:30.40,en - 白色,,0,0,0,,and you'll see this time and time again as you write recursive data structures later in this course--
Dialogue: 0,0:04:25.31,0:04:30.40,zh - 黄色,,0,0,0,,在本课程后面编写递归数据结构时，你将一次又一次地看到这一点
Dialogue: 0,0:04:31.05,0:04:33.97,en - 白色,,0,0,0,,you'll often create a private static helper method--
Dialogue: 0,0:04:31.05,0:04:33.97,zh - 黄色,,0,0,0,,你通常会创建一个 private static 的帮助方法
Dialogue: 0,0:04:34.41,0:04:36.11,en - 白色,,0,0,0,,in this case, also known as size--
Dialogue: 0,0:04:34.41,0:04:36.11,zh - 黄色,,0,0,0,,也称为 size
Dialogue: 0,0:04:36.91,0:04:38.91,en - 白色,,0,0,0,,that is going to take a particular node--
Dialogue: 0,0:04:36.91,0:04:38.91,zh - 黄色,,0,0,0,,它需要一个特定的节点
Dialogue: 0,0:04:39.24,0:04:41.84,en - 白色,,0,0,0,,and this, I'm going to give a very clear comment here--
Dialogue: 0,0:04:39.24,0:04:41.84,zh - 黄色,,0,0,0,,我将在这给出一个非常明确的注释
Dialogue: 0,0:04:42.27,0:04:47.98,en - 白色,,0,0,0,,returns the size of the list that starts at int node p.
Dialogue: 0,0:04:42.27,0:04:47.98,zh - 黄色,,0,0,0,,返回从 intNode p 开始的列表的大小
Dialogue: 0,0:04:50.79,0:04:55.36,en - 白色,,0,0,0,,So here, now, this is a naked recursive data structure.
Dialogue: 0,0:04:50.79,0:04:55.36,zh - 黄色,,0,0,0,,所以现在这是一个裸露的递归数据结构
Dialogue: 0,0:04:55.36,0:04:58.97,en - 白色,,0,0,0,,This speaks the secret language of the gods, this data structure.
Dialogue: 0,0:04:55.36,0:04:58.97,zh - 黄色,,0,0,0,,这个数据结构讲神的秘密语言
Dialogue: 0,0:04:59.36,0:05:02.52,en - 白色,,0,0,0,,It's just doing the usual stuff we're used to with these data structures.
Dialogue: 0,0:04:59.36,0:05:02.52,zh - 黄色,,0,0,0,,它只是在做我们习惯于处理这些数据结构的事情
Dialogue: 0,0:05:02.52,0:05:05.44,en - 白色,,0,0,0,,Let me go back to the picture and compare.
Dialogue: 0,0:05:02.52,0:05:05.44,zh - 黄色,,0,0,0,,让我回到幻灯片上来比较一下
Dialogue: 0,0:05:06.24,0:05:07.71,en - 白色,,0,0,0,,So when we're working with SLLists,
Dialogue: 0,0:05:06.24,0:05:07.71,zh - 黄色,,0,0,0,,当我们使用 SLList 时
Dialogue: 0,0:05:08.52,0:05:10.37,en - 白色,,0,0,0,,our pointers point to the middle man.
Dialogue: 0,0:05:08.52,0:05:10.37,zh - 黄色,,0,0,0,,我们的指针指向中间人
Dialogue: 0,0:05:10.79,0:05:14.37,en - 白色,,0,0,0,,We are now going down a method that's thinking about data structures in these terms--
Dialogue: 0,0:05:10.79,0:05:14.37,zh - 黄色,,0,0,0,,我们现在使用这些术语来考虑数据结构
Dialogue: 0,0:05:14.63,0:05:18.57,en - 白色,,0,0,0,,in the naked recursive way, where we can pointers to any place in the list, OK?
Dialogue: 0,0:05:14.63,0:05:18.57,zh - 黄色,,0,0,0,,在裸递归实现方式中，我们可以指向 List 的任意位置
Dialogue: 0,0:05:19.51,0:05:20.42,en - 白色,,0,0,0,,So how is that going to work?
Dialogue: 0,0:05:19.51,0:05:20.42,zh - 黄色,,0,0,0,,那么这会怎样工作呢？
Dialogue: 0,0:05:21.20,0:05:23.22,en - 白色,,0,0,0,,Well, now it's going to be a lot like lecture 3.
Dialogue: 0,0:05:21.20,0:05:23.22,zh - 黄色,,0,0,0,,现在很像第3课的情况
Dialogue: 0,0:05:23.43,0:05:24.93,en - 白色,,0,0,0,,I'm going to do something like this.
Dialogue: 0,0:05:23.43,0:05:24.93,zh - 黄色,,0,0,0,,这样做
Dialogue: 0,0:05:24.93,0:05:29.04,en - 白色,,0,0,0,,If p.next equals null, then I can just return 1.
Dialogue: 0,0:05:24.93,0:05:29.04,zh - 黄色,,0,0,0,,if (p.next == null)，则返回 1
Dialogue: 0,0:05:29.79,0:05:33.93,en - 白色,,0,0,0,,Otherwise, we want to return 1 plus the size of p.next.
Dialogue: 0,0:05:29.79,0:05:33.93,zh - 黄色,,0,0,0,,否则返回 1 + size(p.next)
Dialogue: 0,0:05:34.53,0:05:39.48,en - 白色,,0,0,0,,So if the size method is being called on this node,
Dialogue: 0,0:05:34.53,0:05:39.48,zh - 黄色,,0,0,0,,如果在此节点上调用 size 方法
Dialogue: 0,0:05:39.48,0:05:41.08,en - 白色,,0,0,0,,for example, it'll just return 1.
Dialogue: 0,0:05:39.48,0:05:41.08,zh - 黄色,,0,0,0,,例如它只返回1
Dialogue: 0,0:05:41.36,0:05:46.82,en - 白色,,0,0,0,,But if it's called on this one, it'll add 1 plus the size of this list over here. OK?
Dialogue: 0,0:05:41.36,0:05:46.82,zh - 黄色,,0,0,0,,但是如果在这个节点上调用，则为1加上这个 List 的大小
Dialogue: 0,0:05:47.54,0:05:49.40,en - 白色,,0,0,0,,So that's what our private static method looks like.
Dialogue: 0,0:05:47.54,0:05:49.40,zh - 黄色,,0,0,0,,这就是我们的 private static 方法
Dialogue: 0,0:05:50.10,0:05:53.73,en - 白色,,0,0,0,,Now, this is a very common pattern when working with recursive data structures,
Dialogue: 0,0:05:50.10,0:05:53.73,zh - 黄色,,0,0,0,,在处理递归数据结构时，这是一种非常常见的模式
Dialogue: 0,0:05:53.95,0:05:59.88,en - 白色,,0,0,0,,that you'll have a public method that speaks the language of mortals and a private method that speaks the language of the gods.
Dialogue: 0,0:05:53.95,0:05:59.88,zh - 黄色,,0,0,0,,你会有一个说凡人语言的 public 方法和一个说神语言的 private 方法
Dialogue: 0,0:06:00.48,0:06:06.88,en - 白色,,0,0,0,,So the public language-- or sorry, the middleman-- the public method needs to use this method right here.
Dialogue: 0,0:06:00.48,0:06:06.88,zh - 黄色,,0,0,0,,public 方法需要使用这个中间人
Dialogue: 0,0:06:06.88,0:06:10.15,en - 白色,,0,0,0,,And in this case, we'll just say the size of first.
Dialogue: 0,0:06:06.88,0:06:10.15,zh - 黄色,,0,0,0,,这种情况下返回 size(first)
Dialogue: 0,0:06:10.80,0:06:13.48,en - 白色,,0,0,0,,That little face I just made was me trying to get you to think.
Dialogue: 0,0:06:10.80,0:06:13.48,zh - 黄色,,0,0,0,,我刚才做的那个小鬼脸就是想让你思考
Dialogue: 0,0:06:14.57,0:06:15.48,en - 白色,,0,0,0,,I don't know if it worked.
Dialogue: 0,0:06:14.57,0:06:15.48,zh - 黄色,,0,0,0,,不知道有没有用...
Dialogue: 0,0:06:17.12,0:06:20.33,en - 白色,,0,0,0,,And so let's see if the size method seems to work here. OK.
Dialogue: 0,0:06:17.12,0:06:20.33,zh - 黄色,,0,0,0,,让我们看看 size 方法是否正常工作
Dialogue: 0,0:06:21.72,0:06:22.60,en - 白色,,0,0,0,,Indeed, it does.
Dialogue: 0,0:06:21.72,0:06:22.60,zh - 黄色,,0,0,0,,确实如此
Dialogue: 0,0:06:22.85,0:06:27.41,en - 白色,,0,0,0,,And if you want to try it out, you can take this code that I've just written,
Dialogue: 0,0:06:22.85,0:06:27.41,zh - 黄色,,0,0,0,,如果你想试一下，可以用我刚刚写的这段代码
Dialogue: 0,0:06:27.41,0:06:29.91,en - 白色,,0,0,0,,put it through the visualizer, and make sure it makes sense.
Dialogue: 0,0:06:27.41,0:06:29.91,zh - 黄色,,0,0,0,,把它放进可视化工具，确保它有意义
Dialogue: 0,0:06:29.91,0:06:31.93,en - 白色,,0,0,0,,But hopefully, the idea is clear.
Dialogue: 0,0:06:29.91,0:06:31.93,zh - 黄色,,0,0,0,,这个思路是明确的
Dialogue: 0,0:06:32.46,0:06:34.37,en - 白色,,0,0,0,,So to summarize this notion--
Dialogue: 0,0:06:32.46,0:06:34.37,zh - 黄色,,0,0,0,,总结一下这个概念
Dialogue: 0,0:06:35.05,0:06:36.15,en - 白色,,0,0,0,,so, I'm sorry.
Dialogue: 0,0:06:35.05,0:06:36.15,zh - 黄色,,0,0,0,,抱歉
Dialogue: 0,0:06:36.15,0:06:39.30,en - 白色,,0,0,0,,To summarize addLast iteratively, not a lot of surprises.
Dialogue: 0,0:06:36.15,0:06:39.30,zh - 黄色,,0,0,0,,反复总结 addLast 没有太多惊喜
Dialogue: 0,0:06:39.30,0:06:40.55,en - 白色,,0,0,0,,You know, it's kind of like we're used to.
Dialogue: 0,0:06:39.30,0:06:40.55,zh - 黄色,,0,0,0,,我们已经习惯这些了
Dialogue: 0,0:06:40.77,0:06:42.76,en - 白色,,0,0,0,,But for size, doing it recursively,
Dialogue: 0,0:06:40.77,0:06:42.76,zh - 黄色,,0,0,0,,但是对 size 而言，递归地实现它
Dialogue: 0,0:06:42.76,0:06:44.97,en - 白色,,0,0,0,,we had to adopt new programming pattern
Dialogue: 0,0:06:42.76,0:06:44.97,zh - 黄色,,0,0,0,,我们不得不采用新的编程模式
Dialogue: 0,0:06:44.97,0:06:48.75,en - 白色,,0,0,0,,where we created a private static method that spoke the language of the gods.
Dialogue: 0,0:06:44.97,0:06:48.75,zh - 黄色,,0,0,0,,创建了一个能说神之语的 private static 方法
Dialogue: 0,0:06:45.75,0:06:48.75,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
