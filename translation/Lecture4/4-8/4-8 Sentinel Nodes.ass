[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 4-8 Sentinel Nodes.mp4
Video File: 4-8 Sentinel Nodes.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 123
Active Line: 132
Video Position: 12509

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.77,0:00:02.73,en - 白色,,0,0,0,,Our fix for addLast-- it works,
Dialogue: 0,0:00:00.77,0:00:02.73,zh - 黄色,,0,0,0,,我们对 addLast 的修改生效了
Dialogue: 0,0:00:02.93,0:00:09.72,en - 白色,,0,0,0,,but I don't think it's as pure or as beautiful or as simple as the somewhat strange idea I'm about to explain.
Dialogue: 0,0:00:02.93,0:00:09.72,zh - 黄色,,0,0,0,,但跟我将要解释的奇怪想法相比，它不够优雅简单
Dialogue: 0,0:00:10.57,0:00:13.38,en - 白色,,0,0,0,,So we're going to introduce something known as a sentinel node in a moment,
Dialogue: 0,0:00:10.57,0:00:13.38,zh - 黄色,,0,0,0,,一会我要介绍一个叫做“哨兵节点”的东西
Dialogue: 0,0:00:13.66,0:00:15.10,en - 白色,,0,0,0,,but I want to give a little bit of motivation.
Dialogue: 0,0:00:13.66,0:00:15.10,zh - 黄色,,0,0,0,,但我想给大家一点理由
Dialogue: 0,0:00:16.05,0:00:18.95,en - 白色,,0,0,0,,Code that has special cases is hard to reason about.
Dialogue: 0,0:00:16.05,0:00:18.95,zh - 黄色,,0,0,0,,代码中有一些很难推理的特殊情况
Dialogue: 0,0:00:19.35,0:00:21.51,en - 白色,,0,0,0,,Human beings only have so much working memory,
Dialogue: 0,0:00:19.35,0:00:21.51,zh - 黄色,,0,0,0,,人类的工作记忆又是有限的
Dialogue: 0,0:00:21.78,0:00:27.31,en - 白色,,0,0,0,,so whenever you have code that requires you to be thinking about exceptions to the rules and so forth,
Dialogue: 0,0:00:21.78,0:00:27.31,zh - 黄色,,0,0,0,,有时代码需要你考虑一些规则外的异常
Dialogue: 0,0:00:27.31,0:00:31.09,en - 白色,,0,0,0,,it's just harder than something where everything behaves in one consistent way.
Dialogue: 0,0:00:27.31,0:00:31.09,zh - 黄色,,0,0,0,,这比让一切以统一的方式运行更难
Dialogue: 0,0:00:31.85,0:00:34.71,en - 白色,,0,0,0,,So this is all going to seem a little slippery until you get a little practice,
Dialogue: 0,0:00:31.85,0:00:34.71,zh - 黄色,,0,0,0,,除非你练习一下，否则会很难以捉摸
Dialogue: 0,0:00:34.88,0:00:38.57,en - 白色,,0,0,0,,but I hope this example I'm about to show you gives you some flavor
Dialogue: 0,0:00:34.88,0:00:38.57,zh - 黄色,,0,0,0,,我希望通过这个例子可以帮助你们理解
Dialogue: 0,0:00:38.80,0:00:41.70,en - 白色,,0,0,0,,for why these kinds of ideas actually make code simpler,
Dialogue: 0,0:00:38.80,0:00:41.70,zh - 黄色,,0,0,0,,为什么这些想法让代码变得更简单
Dialogue: 0,0:00:41.70,0:00:43.76,en - 白色,,0,0,0,,even though at first they may seem crazy.
Dialogue: 0,0:00:41.70,0:00:43.76,zh - 黄色,,0,0,0,,尽管乍一看它们可能很疯狂
Dialogue: 0,0:00:44.10,0:00:45.05,en - 白色,,0,0,0,,So what am I talking about?
Dialogue: 0,0:00:44.10,0:00:45.05,zh - 黄色,,0,0,0,,我在谈什么呢？
Dialogue: 0,0:00:45.94,0:00:47.52,en - 白色,,0,0,0,,Well, the fundamental problem here
Dialogue: 0,0:00:45.94,0:00:47.52,zh - 黄色,,0,0,0,,根本问题是
Dialogue: 0,0:00:47.52,0:00:51.13,en - 白色,,0,0,0,,is that when we write the addLast method,
Dialogue: 0,0:00:47.52,0:00:51.13,zh - 黄色,,0,0,0,,当我们编写 addLast 方法时
Dialogue: 0,0:00:51.42,0:00:53.89,en - 白色,,0,0,0,,the empty list has a null first.
Dialogue: 0,0:00:51.42,0:00:53.89,zh - 黄色,,0,0,0,,空链表有一个 null 的 first
Dialogue: 0,0:00:54.00,0:00:57.51,en - 白色,,0,0,0,,So there are some lists where the value of first can be null,
Dialogue: 0,0:00:54.00,0:00:57.51,zh - 黄色,,0,0,0,,List 的 first 是 null
Dialogue: 0,0:00:58.20,0:01:00.79,en - 白色,,0,0,0,,and that runs us into trouble at this line of code.
Dialogue: 0,0:00:58.20,0:01:00.79,zh - 黄色,,0,0,0,,这让我们在这行代码上遇到了麻烦
Dialogue: 0,0:01:02.13,0:01:04.89,en - 白色,,0,0,0,,If the list is empty, then p gets set equal to null.
Dialogue: 0,0:01:02.13,0:01:04.89,zh - 黄色,,0,0,0,,如果链表为空，那么 p 设为 null
Dialogue: 0,0:01:04.89,0:01:07.16,en - 白色,,0,0,0,,And then we say null.next, and that's real bad.
Dialogue: 0,0:01:04.89,0:01:07.16,zh - 黄色,,0,0,0,,然后访问 null.next，这真的很糟糕
Dialogue: 0,0:01:07.16,0:01:08.26,en - 白色,,0,0,0,,We get a null pointer exception.
Dialogue: 0,0:01:07.16,0:01:08.26,zh - 黄色,,0,0,0,,我们得到一个空指针异常
Dialogue: 0,0:01:08.82,0:01:12.42,en - 白色,,0,0,0,,So our fix to this problem that we have so far is ugly.
Dialogue: 0,0:01:08.82,0:01:12.42,zh - 黄色,,0,0,0,,我们目前的解决方法很丑陋
Dialogue: 0,0:01:12.42,0:01:14.61,en - 白色,,0,0,0,,It has a special case, and we'll hear-- well,
Dialogue: 0,0:01:12.42,0:01:14.61,zh - 黄色,,0,0,0,,它有一个特殊情况...
Dialogue: 0,0:01:14.61,0:01:15.57,en - 白色,,0,0,0,,I mean, this is a list.
Dialogue: 0,0:01:14.61,0:01:15.57,zh - 黄色,,0,0,0,,这只是一个链表
Dialogue: 0,0:01:15.57,0:01:16.62,en - 白色,,0,0,0,,It's super simple.
Dialogue: 0,0:01:15.57,0:01:16.62,zh - 黄色,,0,0,0,,非常简单
Dialogue: 0,0:01:17.88,0:01:22.45,en - 白色,,0,0,0,,But if you start moving on to data structures like trees or something with multiple links,
Dialogue: 0,0:01:17.88,0:01:22.45,zh - 黄色,,0,0,0,,但是如果你接触像树一样有很多个链接的数据结构
Dialogue: 0,0:01:22.65,0:01:24.16,en - 白色,,0,0,0,,you're going to run into huge headaches
Dialogue: 0,0:01:22.65,0:01:24.16,zh - 黄色,,0,0,0,,你会巨头疼
Dialogue: 0,0:01:24.16,0:01:28.69,en - 白色,,0,0,0,,as you have potentially an exponential number of special cases you have to deal with.
Dialogue: 0,0:01:24.16,0:01:28.69,zh - 黄色,,0,0,0,,因为你需要处理的潜在特殊情况呈指数增长
Dialogue: 0,0:01:29.07,0:01:32.57,en - 白色,,0,0,0,,We want one consistent story, not a bunch of separate little rules.
Dialogue: 0,0:01:29.07,0:01:32.57,zh - 黄色,,0,0,0,,我们想要一个始终如一的故事，而不是一堆独立的小规则
Dialogue: 0,0:01:33.09,0:01:35.34,en - 白色,,0,0,0,,So what we're going to do to make one consistent story
Dialogue: 0,0:01:33.09,0:01:35.34,zh - 黄色,,0,0,0,,为了得到始终如一的故事
Dialogue: 0,0:01:35.34,0:01:37.19,en - 白色,,0,0,0,,is we're going to make it so that all SLLists,
Dialogue: 0,0:01:35.34,0:01:37.19,zh - 黄色,,0,0,0,,我们要让所有的 SLList
Dialogue: 0,0:01:37.35,0:01:39.97,en - 白色,,0,0,0,,even if they're empty, should somehow be the same.
Dialogue: 0,0:01:37.35,0:01:39.97,zh - 黄色,,0,0,0,,即使它们是空的，在某种程度上也应该是一样的
Dialogue: 0,0:01:40.45,0:01:43.54,en - 白色,,0,0,0,,They should have the same structure, the same something--
Dialogue: 0,0:01:40.45,0:01:43.54,zh - 黄色,,0,0,0,,它们应该有相同的结构，相同的东西
Dialogue: 0,0:01:44.22,0:01:45.96,en - 白色,,0,0,0,,and finding that something is sometimes tricky,
Dialogue: 0,0:01:44.22,0:01:45.96,zh - 黄色,,0,0,0,,有时会遇到棘手的事情
Dialogue: 0,0:01:46.41,0:01:47.38,en - 白色,,0,0,0,,as we'll see now.
Dialogue: 0,0:01:46.41,0:01:47.38,zh - 黄色,,0,0,0,,就像之前那样
Dialogue: 0,0:01:48.54,0:01:50.61,en - 白色,,0,0,0,,So my solution to bring everything together,
Dialogue: 0,0:01:48.54,0:01:50.61,zh - 黄色,,0,0,0,,所以我的解决方案是把所有的东西都放在一起
Dialogue: 0,0:01:50.61,0:01:53.67,en - 白色,,0,0,0,,to bring us into harmony is going to change the whole rules of the game.
Dialogue: 0,0:01:50.61,0:01:53.67,zh - 黄色,,0,0,0,,和谐共处改变整个游戏规则
Dialogue: 0,0:01:53.67,0:01:55.06,en - 白色,,0,0,0,,I'm going to say, hey, you know what?
Dialogue: 0,0:01:53.67,0:01:55.06,zh - 黄色,,0,0,0,,我会这样做
Dialogue: 0,0:01:55.78,0:01:57.87,en - 白色,,0,0,0,,An empty list is not going to have a null pointer.
Dialogue: 0,0:01:55.78,0:01:57.87,zh - 黄色,,0,0,0,,空链表中不会有空指针
Dialogue: 0,0:01:57.87,0:02:02.34,en - 白色,,0,0,0,,Instead, it's going to point at a node that I'm going to call a sentinel node- a node that's always there.
Dialogue: 0,0:01:57.87,0:02:02.34,zh - 黄色,,0,0,0,,它将指向一个节点，我称之为哨兵节点，一个始终存在的节点
Dialogue: 0,0:02:02.34,0:02:08.06,en - 白色,,0,0,0,,Something that's going to stand there and be the front of the classroom, the first person in line.
Dialogue: 0,0:02:02.34,0:02:08.06,zh - 黄色,,0,0,0,,它站在那里，在教室的最前方，在队伍中的最前面
Dialogue: 0,0:02:08.33,0:02:10.08,en - 白色,,0,0,0,,We know they're there, they're dependable,
Dialogue: 0,0:02:08.33,0:02:10.08,zh - 黄色,,0,0,0,,我们知道它在那里，无比可靠
Dialogue: 0,0:02:10.08,0:02:12.16,en - 白色,,0,0,0,,and we don't have to worry that maybe they don't exist at all.
Dialogue: 0,0:02:10.08,0:02:12.16,zh - 黄色,,0,0,0,,无需担心它不存在
Dialogue: 0,0:02:12.30,0:02:13.56,en - 白色,,0,0,0,,They're always going to be there.
Dialogue: 0,0:02:12.30,0:02:13.56,zh - 黄色,,0,0,0,,它会一直在那里
Dialogue: 0,0:02:14.25,0:02:17.38,en - 白色,,0,0,0,,The empty list, therefore, is just the sentinel node.
Dialogue: 0,0:02:14.25,0:02:17.38,zh - 黄色,,0,0,0,,因此空链表只是哨兵节点
Dialogue: 0,0:02:17.58,0:02:21.87,en - 白色,,0,0,0,,It's our faithful companion waiting for other data to get in line behind it, if anything ever shows up.
Dialogue: 0,0:02:17.58,0:02:21.87,zh - 黄色,,0,0,0,,它是我们忠实的伙伴，等待其他数据排在后面
Dialogue: 0,0:02:22.62,0:02:26.94,en - 白色,,0,0,0,,By contrast, the last three item list has the same faithful companion,
Dialogue: 0,0:02:22.62,0:02:26.94,zh - 黄色,,0,0,0,,List 的后三项有同样忠实的伙伴
Dialogue: 0,0:02:27.11,0:02:30.75,en - 白色,,0,0,0,,and now the usual recursive naked data structure-- 5, 10, 15.
Dialogue: 0,0:02:27.11,0:02:30.75,zh - 黄色,,0,0,0,,这里是常见的递归裸数据结构——5、10、15
Dialogue: 0,0:02:31.83,0:02:35.77,en - 白色,,0,0,0,,So what we're going to do now is try to implement this using the sentinel node idea,
Dialogue: 0,0:02:31.83,0:02:35.77,zh - 黄色,,0,0,0,,我们要尝试使用哨兵节点的思想实现
Dialogue: 0,0:02:35.77,0:02:38.53,en - 白色,,0,0,0,,and I hope you'll be able to appreciate just how cool this is.
Dialogue: 0,0:02:35.77,0:02:38.53,zh - 黄色,,0,0,0,,希望你能体会到这有多酷
Dialogue: 0,0:02:39.87,0:02:42.80,en - 白色,,0,0,0,,So instead of first, I'm going to call this thing sentinel.
Dialogue: 0,0:02:39.87,0:02:42.80,zh - 黄色,,0,0,0,,我要使用 sentinel 取代 first
Dialogue: 0,0:02:43.22,0:02:44.39,en - 白色,,0,0,0,,I think it's just a better name.
Dialogue: 0,0:02:43.22,0:02:44.39,zh - 黄色,,0,0,0,,这是个更好的名字
Dialogue: 0,0:02:44.69,0:02:46.53,en - 白色,,0,0,0,,I'll make a little note here, mostly for us.
Dialogue: 0,0:02:44.69,0:02:46.53,zh - 黄色,,0,0,0,,在这记个笔记，主要为了我们
Dialogue: 0,0:02:46.53,0:02:48.38,en - 白色,,0,0,0,,This would be a strange comment to put in code.
Dialogue: 0,0:02:46.53,0:02:48.38,zh - 黄色,,0,0,0,,这将是代码中一个奇怪的注释
Dialogue: 0,0:02:49.84,0:02:54.67,en - 白色,,0,0,0,,The first item, if it exists, is at sentinel.next.
Dialogue: 0,0:02:49.84,0:02:54.67,zh - 黄色,,0,0,0,,第一项（如果存在）位于 sentinel.next 处
Dialogue: 0,0:02:56.69,0:02:59.76,en - 白色,,0,0,0,,So we can see that if we look back at our picture from the previous slide--
Dialogue: 0,0:02:56.69,0:02:59.76,zh - 黄色,,0,0,0,,回顾上一张幻灯片中的图片
Dialogue: 0,0:03:00.36,0:03:05.37,en - 白色,,0,0,0,,sentinel.next is going to be the real first item,
Dialogue: 0,0:03:00.36,0:03:05.37,zh - 黄色,,0,0,0,,sentinel.next 后面是真正的 first 项
Dialogue: 0,0:03:05.37,0:03:06.02,en - 白色,,0,0,0,,if there is one.
Dialogue: 0,0:03:05.37,0:03:06.02,zh - 黄色,,0,0,0,,如果有的话
Dialogue: 0,0:03:07.37,0:03:11.67,en - 白色,,0,0,0,,Now, if we want to actually go through and create an empty SLList, what's going to be different,
Dialogue: 0,0:03:07.37,0:03:11.67,zh - 黄色,,0,0,0,,现在如果我们创建一个空的 SLList，会有什么不同
Dialogue: 0,0:03:11.67,0:03:13.20,en - 白色,,0,0,0,,other than this being called sentinel,
Dialogue: 0,0:03:11.67,0:03:13.20,zh - 黄色,,0,0,0,,除了这个被称为 sentinel 以外
Dialogue: 0,0:03:13.97,0:03:15.27,en - 白色,,0,0,0,,is that we need to make a node.
Dialogue: 0,0:03:13.97,0:03:15.27,zh - 黄色,,0,0,0,,我们需要制作一个节点
Dialogue: 0,0:03:15.27,0:03:17.35,en - 白色,,0,0,0,,There should be something there-- the faithful companion.
Dialogue: 0,0:03:15.27,0:03:17.35,zh - 黄色,,0,0,0,,那里应该有一些东西...忠实的伙伴
Dialogue: 0,0:03:18.33,0:03:22.82,en - 白色,,0,0,0,,And we said it needs to be a question mark null,
Dialogue: 0,0:03:18.33,0:03:22.82,zh - 黄色,,0,0,0,,它需要“?”标志和 null
Dialogue: 0,0:03:24.18,0:03:26.59,en - 白色,,0,0,0,,but in Java, you can't set question mark.
Dialogue: 0,0:03:24.18,0:03:26.59,zh - 黄色,,0,0,0,,但在 Java 中不能设置问号
Dialogue: 0,0:03:26.82,0:03:28.47,en - 白色,,0,0,0,,So instead, I'm going to pick any old number,
Dialogue: 0,0:03:26.82,0:03:28.47,zh - 黄色,,0,0,0,,所以我会选择任何数字替代
Dialogue: 0,0:03:28.47,0:03:30.41,en - 白色,,0,0,0,,and it doesn't matter, because the faithful companion--
Dialogue: 0,0:03:28.47,0:03:30.41,zh - 黄色,,0,0,0,,这无关紧要
Dialogue: 0,0:03:30.41,0:03:32.98,en - 白色,,0,0,0,,we're never going to ask the faithful companion's opinions.
Dialogue: 0,0:03:30.41,0:03:32.98,zh - 黄色,,0,0,0,,我们永远不会问忠实伙伴的意见
Dialogue: 0,0:03:32.98,0:03:34.01,en - 白色,,0,0,0,,It's just going to hold some data.
Dialogue: 0,0:03:32.98,0:03:34.01,zh - 黄色,,0,0,0,,它就是保存一些数据
Dialogue: 0,0:03:34.59,0:03:36.00,en - 白色,,0,0,0,,So I'm going to put in 63.
Dialogue: 0,0:03:34.59,0:03:36.00,zh - 黄色,,0,0,0,,我放入63
Dialogue: 0,0:03:36.21,0:03:36.64,en - 白色,,0,0,0,,Good.
Dialogue: 0,0:03:36.21,0:03:36.64,zh - 黄色,,0,0,0,,好
Dialogue: 0,0:03:37.14,0:03:37.77,en - 白色,,0,0,0,,Doesn't matter.
Dialogue: 0,0:03:37.14,0:03:37.77,zh - 黄色,,0,0,0,,无关紧要
Dialogue: 0,0:03:37.77,0:03:40.12,en - 白色,,0,0,0,,You could have picked negative 5, but I picked 63.
Dialogue: 0,0:03:37.77,0:03:40.12,zh - 黄色,,0,0,0,,你可以放-5，但我选了63
Dialogue: 0,0:03:41.39,0:03:42.40,en - 白色,,0,0,0,,That's that for empty SLLists.
Dialogue: 0,0:03:41.39,0:03:42.40,zh - 黄色,,0,0,0,,这是为空 SLList 准备的
Dialogue: 0,0:03:43.32,0:03:44.86,en - 白色,,0,0,0,,How about for the one item SLList?
Dialogue: 0,0:03:43.32,0:03:44.86,zh - 黄色,,0,0,0,,那包含一项的 SLList 呢？
Dialogue: 0,0:03:45.48,0:03:49.31,en - 白色,,0,0,0,,Well, in that case, the sentinel is still going to have the same faithful companion at the front,
Dialogue: 0,0:03:45.48,0:03:49.31,zh - 黄色,,0,0,0,,在这种情况下，仍然有哨兵在前面作为忠实的伙伴
Dialogue: 0,0:03:51.03,0:03:54.36,en - 白色,,0,0,0,,and then the faithful companion is going to point at the data we want.
Dialogue: 0,0:03:51.03,0:03:54.36,zh - 黄色,,0,0,0,,它指向我们想要的数据
Dialogue: 0,0:03:55.35,0:03:57.28,en - 白色,,0,0,0,,It's going to say, hey, you want data?
Dialogue: 0,0:03:55.35,0:03:57.28,zh - 黄色,,0,0,0,,它会说“嘿，你想要数据吗？”
Dialogue: 0,0:03:57.28,0:03:59.88,en - 白色,,0,0,0,,Here's the naked recursive data structure-- the first node.
Dialogue: 0,0:03:57.28,0:03:59.88,zh - 黄色,,0,0,0,,“下面是裸递归数据结构的第一个节点”
Dialogue: 0,0:04:01.56,0:04:02.29,en - 白色,,0,0,0,,That's SLList.
Dialogue: 0,0:04:01.56,0:04:02.29,zh - 黄色,,0,0,0,,这是 SLList 方法
Dialogue: 0,0:04:02.49,0:04:03.48,en - 白色,,0,0,0,,How about addFirst?
Dialogue: 0,0:04:02.49,0:04:03.48,zh - 黄色,,0,0,0,,addFirst 呢？
Dialogue: 0,0:04:05.61,0:04:08.25,en - 白色,,0,0,0,,So sentinel equals new IntNode x sentinel.
Dialogue: 0,0:04:05.61,0:04:08.25,zh - 黄色,,0,0,0,,sentinel = new IntNode(x, sentinel)
Dialogue: 0,0:04:08.25,0:04:09.36,en - 白色,,0,0,0,,I'm going to say this is wrong.
Dialogue: 0,0:04:08.25,0:04:09.36,zh - 黄色,,0,0,0,,这是错误的
Dialogue: 0,0:04:09.87,0:04:14.61,en - 白色,,0,0,0,,The reason it's wrong is that sentinel should be pointing only at the same faithful companion.
Dialogue: 0,0:04:09.87,0:04:14.61,zh - 黄色,,0,0,0,,因为哨兵应该只指向同一个忠实的伙伴
Dialogue: 0,0:04:14.61,0:04:16.25,en - 白色,,0,0,0,,We should never be re-assigning sentinel.
Dialogue: 0,0:04:14.61,0:04:16.25,zh - 黄色,,0,0,0,,永远不要重新分配哨兵
Dialogue: 0,0:04:16.68,0:04:20.32,en - 白色,,0,0,0,,Instead, we should be saying, hey sentinel, someone wants to get in line behind you.
Dialogue: 0,0:04:16.68,0:04:20.32,zh - 黄色,,0,0,0,,相反，我们应该说：“嘿哨兵，有人想在你后面排队”
Dialogue: 0,0:04:20.57,0:04:21.31,en - 白色,,0,0,0,,Oh, do they?
Dialogue: 0,0:04:20.57,0:04:21.31,zh - 黄色,,0,0,0,,“哦，是吗？”
Dialogue: 0,0:04:21.72,0:04:22.53,en - 白色,,0,0,0,,OK, great.
Dialogue: 0,0:04:21.72,0:04:22.53,zh - 黄色,,0,0,0,,“好的”
Dialogue: 0,0:04:22.81,0:04:27.16,en - 白色,,0,0,0,,Sentinel.next equals new IntNode x comma sentinel.next.
Dialogue: 0,0:04:22.81,0:04:27.16,zh - 黄色,,0,0,0,,sentinel.next = new IntNode(x, sentinel.next)
Dialogue: 0,0:04:27.92,0:04:30.23,en - 白色,,0,0,0,,So the idea is that whoever used to be at the front of the line
Dialogue: 0,0:04:27.92,0:04:30.23,zh - 黄色,,0,0,0,,我们的想法是，无论谁曾经排在队伍的最前面
Dialogue: 0,0:04:30.44,0:04:31.49,en - 白色,,0,0,0,,is now second in line.
Dialogue: 0,0:04:30.44,0:04:31.49,zh - 黄色,,0,0,0,,现在都要是第二位
Dialogue: 0,0:04:33.09,0:04:34.15,en - 白色,,0,0,0,,Then we have getFirst.
Dialogue: 0,0:04:33.09,0:04:34.15,zh - 黄色,,0,0,0,,然后是 getFirst
Dialogue: 0,0:04:34.85,0:04:36.32,en - 白色,,0,0,0,,So if I want to get the first item--
Dialogue: 0,0:04:34.85,0:04:36.32,zh - 黄色,,0,0,0,,如果想要获取第一项
Dialogue: 0,0:04:36.99,0:04:39.81,en - 白色,,0,0,0,,this is also wrong, even if I do sentinel.item.
Dialogue: 0,0:04:36.99,0:04:39.81,zh - 黄色,,0,0,0,,这也是错误的，即使我改成 seninel.item
Dialogue: 0,0:04:39.81,0:04:40.58,en - 白色,,0,0,0,,Why?
Dialogue: 0,0:04:39.81,0:04:40.58,zh - 黄色,,0,0,0,,为什么？
Dialogue: 0,0:04:41.46,0:04:42.94,en - 白色,,0,0,0,,If we look back at this little note we have--
Dialogue: 0,0:04:41.46,0:04:42.94,zh - 黄色,,0,0,0,,回过头来看这个小笔记
Dialogue: 0,0:04:42.94,0:04:47.16,en - 白色,,0,0,0,,the first item, if it exists is at sentinel.next, not sentinel.item.
Dialogue: 0,0:04:42.94,0:04:47.16,zh - 黄色,,0,0,0,,第一项（如果存在）位于 sentinel.next，而不是 sentinel.item
Dialogue: 0,0:04:47.67,0:04:50.93,en - 白色,,0,0,0,,So the problem here is that we're asking the sentinel for its opinions,
Dialogue: 0,0:04:47.67,0:04:50.93,zh - 黄色,,0,0,0,,所以问题是我们要向哨兵征求意见
Dialogue: 0,0:04:50.93,0:04:54.67,en - 白色,,0,0,0,,but it's our faithful companion-- never need be spoken to.
Dialogue: 0,0:04:50.93,0:04:54.67,zh - 黄色,,0,0,0,,但它是我们忠实的伙伴，不需要跟它交谈
Dialogue: 0,0:04:54.76,0:04:56.67,en - 白色,,0,0,0,,So the sentinel should be saying, you know what?
Dialogue: 0,0:04:54.76,0:04:56.67,zh - 黄色,,0,0,0,,所以哨兵会说：“你知道吗？”
Dialogue: 0,0:04:56.67,0:04:57.75,en - 白色,,0,0,0,,Don't ask me my opinion.
Dialogue: 0,0:04:56.67,0:04:57.75,zh - 黄色,,0,0,0,,“别问我的意见”
Dialogue: 0,0:04:58.05,0:04:59.43,en - 白色,,0,0,0,,This is who you're looking for.
Dialogue: 0,0:04:58.05,0:04:59.43,zh - 黄色,,0,0,0,,“这就是你们要找的人”
Dialogue: 0,0:05:00.61,0:05:02.90,en - 白色,,0,0,0,,And the virtuous sentinel gets the data to us.
Dialogue: 0,0:05:00.61,0:05:02.90,zh - 黄色,,0,0,0,,德行高尚的哨兵把数据给我们
Dialogue: 0,0:05:02.90,0:05:03.76,en - 白色,,0,0,0,,Thank you, sentinel.
Dialogue: 0,0:05:02.90,0:05:03.76,zh - 黄色,,0,0,0,,谢谢你，哨兵
Dialogue: 0,0:05:04.72,0:05:05.87,en - 白色,,0,0,0,,And then finally, addLast.
Dialogue: 0,0:05:04.72,0:05:05.87,zh - 黄色,,0,0,0,,最后是 addLast
Dialogue: 0,0:05:06.69,0:05:08.49,en - 白色,,0,0,0,,So in this case, the sentinel's never null.
Dialogue: 0,0:05:06.69,0:05:08.49,zh - 黄色,,0,0,0,,在这种情况下，sentinel 永不为 null
Dialogue: 0,0:05:08.49,0:05:10.32,en - 白色,,0,0,0,,We always have the companion.
Dialogue: 0,0:05:08.49,0:05:10.32,zh - 黄色,,0,0,0,,我们一直都有同伴
Dialogue: 0,0:05:10.32,0:05:11.41,en - 白色,,0,0,0,,May as well delete that.
Dialogue: 0,0:05:10.32,0:05:11.41,zh - 黄色,,0,0,0,,不妨把它删掉
Dialogue: 0,0:05:12.37,0:05:13.92,en - 白色,,0,0,0,,We'll say p equals sentinel.
Dialogue: 0,0:05:12.37,0:05:13.92,zh - 黄色,,0,0,0,,令 p = sentinel
Dialogue: 0,0:05:14.83,0:05:16.37,en - 白色,,0,0,0,,So we start at the sentinel,
Dialogue: 0,0:05:14.83,0:05:16.37,zh - 黄色,,0,0,0,,所以从 sentinel 开始
Dialogue: 0,0:05:16.47,0:05:21.05,en - 白色,,0,0,0,,and we have the pointer walk the naked recursive data structure starting at the sentinel.
Dialogue: 0,0:05:16.47,0:05:21.05,zh - 黄色,,0,0,0,,遍历裸递归数据结构
Dialogue: 0,0:05:21.78,0:05:23.61,en - 白色,,0,0,0,,And as long as p.next is not null,
Dialogue: 0,0:05:21.78,0:05:23.61,zh - 黄色,,0,0,0,,并且只要 p.next 不为 null
Dialogue: 0,0:05:23.61,0:05:24.83,en - 白色,,0,0,0,,we go to the end of the list.
Dialogue: 0,0:05:23.61,0:05:24.83,zh - 黄色,,0,0,0,,就这样到达链表的末尾
Dialogue: 0,0:05:25.20,0:05:30.14,en - 白色,,0,0,0,,And it may be that p is just the sentinel, because we only have no items on the list at this point.
Dialogue: 0,0:05:25.20,0:05:30.14,zh - 黄色,,0,0,0,,p 也可能只是个哨兵，代表此刻链表上没有项目
Dialogue: 0,0:05:30.96,0:05:34.13,en - 白色,,0,0,0,,And then once that's done, we do p.next equals new IntNode.
Dialogue: 0,0:05:30.96,0:05:34.13,zh - 黄色,,0,0,0,,一旦完成，就执行 p.next = new IntNode
Dialogue: 0,0:05:34.81,0:05:35.36,en - 白色,,0,0,0,,And that's it.
Dialogue: 0,0:05:34.81,0:05:35.36,zh - 黄色,,0,0,0,,就这样
Dialogue: 0,0:05:35.66,0:05:36.19,en - 白色,,0,0,0,,We're done.
Dialogue: 0,0:05:35.66,0:05:36.19,zh - 黄色,,0,0,0,,结束了
Dialogue: 0,0:05:36.93,0:05:37.91,en - 白色,,0,0,0,,Now, was that easier?
Dialogue: 0,0:05:36.93,0:05:37.91,zh - 黄色,,0,0,0,,这是不是更容易了？
Dialogue: 0,0:05:38.19,0:05:39.08,en - 白色,,0,0,0,,It might have seemed harder.
Dialogue: 0,0:05:38.19,0:05:39.08,zh - 黄色,,0,0,0,,可能看起来更难了
Dialogue: 0,0:05:39.42,0:05:40.89,en - 白色,,0,0,0,,It seemed like we had to do a lot of changes,
Dialogue: 0,0:05:39.42,0:05:40.89,zh - 黄色,,0,0,0,,看起来我们必须做很多改动
Dialogue: 0,0:05:40.89,0:05:43.99,en - 白色,,0,0,0,,that it seemed complicated, that we had something that already worked before--
Dialogue: 0,0:05:40.89,0:05:43.99,zh - 黄色,,0,0,0,,似乎很复杂，之前已经可以工作了
Dialogue: 0,0:05:44.40,0:05:48.15,en - 白色,,0,0,0,,but in larger systems, I promise you that this will make your life easier.
Dialogue: 0,0:05:44.40,0:05:48.15,zh - 黄色,,0,0,0,,但在更大的系统中，我向你保证现在的会更轻松
Dialogue: 0,0:05:48.15,0:05:51.18,en - 白色,,0,0,0,,And when you get to building the link list based deck in project one,
Dialogue: 0,0:05:48.15,0:05:51.18,zh - 黄色,,0,0,0,,当你在项目1中构建基于链表的队列时
Dialogue: 0,0:05:51.35,0:05:54.73,en - 白色,,0,0,0,,I highly recommend that you build it using sentinel nodes like this.
Dialogue: 0,0:05:51.35,0:05:54.73,zh - 黄色,,0,0,0,,我强烈建议你使用这样的哨兵节点来构建
Dialogue: 0,0:05:55.89,0:05:58.53,en - 白色,,0,0,0,,So let's run this thing through the visualizer
Dialogue: 0,0:05:55.89,0:05:58.53,zh - 黄色,,0,0,0,,让我们通过可视化工具来运行一下
Dialogue: 0,0:05:58.94,0:06:01.23,en - 白色,,0,0,0,,and make sure that everything behaves the way we expect.
Dialogue: 0,0:05:58.94,0:06:01.23,zh - 黄色,,0,0,0,,确保每件事都按照我们预期的方式进行
Dialogue: 0,0:06:03.35,0:06:06.17,en - 白色,,0,0,0,,And this is not a thorough test, but we'll just get a rough picture.
Dialogue: 0,0:06:03.35,0:06:06.17,zh - 黄色,,0,0,0,,这不是一次彻底的测试，只是粗略地了解一下
Dialogue: 0,0:06:07.31,0:06:12.34,en - 白色,,0,0,0,,So after we've created the one item list--
Dialogue: 0,0:06:07.31,0:06:12.34,zh - 黄色,,0,0,0,,创建一个项目的链表后
Dialogue: 0,0:06:12.34,0:06:12.90,en - 白色,,0,0,0,,here we go.
Dialogue: 0,0:06:12.34,0:06:12.90,zh - 黄色,,0,0,0,,开始吧
Dialogue: 0,0:06:13.34,0:06:16.98,en - 白色,,0,0,0,,This is the-- sorry, the zero item list, then we have--
Dialogue: 0,0:06:13.34,0:06:16.98,zh - 黄色,,0,0,0,,抱歉，是没有项目的链表
Dialogue: 0,0:06:17.81,0:06:22.30,en - 白色,,0,0,0,,our variable L points at our middleman, has size zero,
Dialogue: 0,0:06:17.81,0:06:22.30,zh - 黄色,,0,0,0,,变量 L 指向中间人，size 是0
Dialogue: 0,0:06:22.36,0:06:26.44,en - 白色,,0,0,0,,and sentinel points at our faithful companion, who you see is holding the number 63.
Dialogue: 0,0:06:22.36,0:06:26.44,zh - 黄色,,0,0,0,,sentinel 指向忠实的伙伴，手里拿着63
Dialogue: 0,0:06:27.54,0:06:31.74,en - 白色,,0,0,0,,After we add the number 20, it ends up at the end of line, after 63.
Dialogue: 0,0:06:27.54,0:06:31.74,zh - 黄色,,0,0,0,,加上数字20后，它结束于链表末尾，在63之后
Dialogue: 0,0:06:32.84,0:06:36.81,en - 白色,,0,0,0,,So that's basically that.
Dialogue: 0,0:06:32.84,0:06:36.81,zh - 黄色,,0,0,0,,基本上就是这样
Dialogue: 0,0:06:37.19,0:06:38.87,en - 白色,,0,0,0,,So let's summarize what we accomplished.
Dialogue: 0,0:06:37.19,0:06:38.87,zh - 黄色,,0,0,0,,那么让我们来总结一下
Dialogue: 0,0:06:39.44,0:06:46.25,en - 白色,,0,0,0,,The sentinel node is a dummy node, a faithful companion-- again, to use the same phrase--
Dialogue: 0,0:06:39.44,0:06:46.25,zh - 黄色,,0,0,0,,再说一遍，哨兵节点是一个虚拟节点，一个忠实的伙伴
Dialogue: 0,0:06:46.25,0:06:47.28,en - 白色,,0,0,0,,that's always there for you.
Dialogue: 0,0:06:46.25,0:06:47.28,zh - 黄色,,0,0,0,,它一直在那里
Dialogue: 0,0:06:47.81,0:06:50.40,en - 白色,,0,0,0,,Now, given that first is no longer pointing at the first item,
Dialogue: 0,0:06:47.81,0:06:50.40,zh - 黄色,,0,0,0,,现在，考虑到 first 不再指向第一项
Dialogue: 0,0:06:50.40,0:06:52.67,en - 白色,,0,0,0,,I've renamed the first variable to be a sentinel.
Dialogue: 0,0:06:50.40,0:06:52.67,zh - 黄色,,0,0,0,,我将第一个变量重命名为 sentinel
Dialogue: 0,0:06:53.52,0:06:57.44,en - 白色,,0,0,0,,And sentinel, of course, with all the code we wrote-- it's never null,
Dialogue: 0,0:06:53.52,0:06:57.44,zh - 黄色,,0,0,0,,当然，sentinel 永不为 null
Dialogue: 0,0:06:57.80,0:06:59.69,en - 白色,,0,0,0,,and it always points at the sentinel node.
Dialogue: 0,0:06:57.80,0:06:59.69,zh - 黄色,,0,0,0,,并且总是指向哨兵节点
Dialogue: 0,0:07:00.54,0:07:02.60,en - 白色,,0,0,0,,The sentinel node's item needs to be some integer.
Dialogue: 0,0:07:00.54,0:07:02.60,zh - 黄色,,0,0,0,,哨兵节点的项需要是某个整数
Dialogue: 0,0:07:02.60,0:07:03.31,en - 白色,,0,0,0,,I picked 63.
Dialogue: 0,0:07:02.60,0:07:03.31,zh - 黄色,,0,0,0,,我选择63
Dialogue: 0,0:07:03.31,0:07:04.51,en - 白色,,0,0,0,,You could have picked whatever you want.
Dialogue: 0,0:07:03.31,0:07:04.51,zh - 黄色,,0,0,0,,你可以随意选择
Dialogue: 0,0:07:04.98,0:07:08.64,en - 白色,,0,0,0,,And then as we wrote our code and looked through each of our constructors and methods,
Dialogue: 0,0:07:04.98,0:07:08.64,zh - 黄色,,0,0,0,,然后，当我们编写代码并查看每个构造函数和方法时
Dialogue: 0,0:07:08.95,0:07:12.18,en - 白色,,0,0,0,,we had to make sure everything was compatible with our sentinel nodes.
Dialogue: 0,0:07:08.95,0:07:12.18,zh - 黄色,,0,0,0,,必须确保一切都与我们的哨兵节点兼容
Dialogue: 0,0:07:12.48,0:07:14.69,en - 白色,,0,0,0,,And ideally, you would have done this in the beginning,
Dialogue: 0,0:07:12.48,0:07:14.69,zh - 黄色,,0,0,0,,理想情况下，你应该在一开始就这么做
Dialogue: 0,0:07:14.69,0:07:16.49,en - 白色,,0,0,0,,so it wouldn't feel quite so haphazard.
Dialogue: 0,0:07:14.69,0:07:16.49,zh - 黄色,,0,0,0,,这样就不会感觉那么草率了
Dialogue: 0,0:07:16.49,0:07:18.99,en - 白色,,0,0,0,,It wouldn't be a bunch of minor changes that we're making all at once.
Dialogue: 0,0:07:16.49,0:07:18.99,zh - 黄色,,0,0,0,,这不会是我们一下子做的一大堆小改动
Dialogue: 0,0:07:20.61,0:07:21.59,en - 白色,,0,0,0,,So the bottom line here--
Dialogue: 0,0:07:20.61,0:07:21.59,zh - 黄色,,0,0,0,,所以这里的底线是...
Dialogue: 0,0:07:22.51,0:07:23.64,en - 白色,,0,0,0,,just to summarize what we've done,
Dialogue: 0,0:07:22.51,0:07:23.64,zh - 黄色,,0,0,0,,总结一下我们所做的
Dialogue: 0,0:07:24.60,0:07:29.03,en - 白色,,0,0,0,,we had the issue that some SLLists had a null first and some didn't,
Dialogue: 0,0:07:24.60,0:07:29.03,zh - 黄色,,0,0,0,,我们遇到问题，一些 SLList 的 first 为 null，一些不是
Dialogue: 0,0:07:29.40,0:07:33.68,en - 白色,,0,0,0,,so we fixed this by bringing everything under one big, consistent, beautiful heading.
Dialogue: 0,0:07:29.40,0:07:33.68,zh - 黄色,,0,0,0,,我们把所有东西都放在一个一致的、漂亮的大主题下解决了这个问题
Dialogue: 0,0:07:33.68,0:07:36.13,en - 白色,,0,0,0,,Everything is handled the same way.
Dialogue: 0,0:07:33.68,0:07:36.13,zh - 黄色,,0,0,0,,一切都以同样的方式处理
Dialogue: 0,0:07:36.20,0:07:39.38,en - 白色,,0,0,0,,There's no need to think about special cases,
Dialogue: 0,0:07:36.20,0:07:39.38,zh - 黄色,,0,0,0,,不需要考虑特殊情况
Dialogue: 0,0:07:40.69,0:07:43.73,en - 白色,,0,0,0,,because we make sure that we always have the faithful companion on the list.
Dialogue: 0,0:07:40.69,0:07:43.73,zh - 黄色,,0,0,0,,因为我们确保 List 上总是有忠实的伙伴
Dialogue: 0,0:07:43.73,0:07:46.15,en - 白色,,0,0,0,,It eliminates the need for this special case
Dialogue: 0,0:07:43.73,0:07:46.15,zh - 黄色,,0,0,0,,它消除了这种特殊情况的需要
Dialogue: 0,0:07:45.94,0:07:48.94,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:07:46.15,0:07:48.94,en - 白色,,0,0,0,,and makes our lives ultimately easier.
Dialogue: 0,0:07:46.15,0:07:48.94,zh - 黄色,,0,0,0,,最终让我们的生活变得更轻松
