[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: 4-7 The Empty List.mp4
Video File: 4-7 The Empty List.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 176
Active Line: 182

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,微软雅黑,60,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,14,1
Style: en - 白色,Yu Gothic UI,45,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,16,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 翻译人员专属 - 片尾（左上角）,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,42,32,42,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
Dialogue: 0,0:00:00.71,0:00:03.68,en - 白色,,0,0,0,,So SLLists, they have some great advantages over IntLists.
Dialogue: 0,0:00:00.71,0:00:03.68,zh - 黄色,,0,0,0,,与 IntList 相比，SLList 有很大的优势
Dialogue: 0,0:00:03.68,0:00:05.34,en - 白色,,0,0,0,,We can cache data inside of them,
Dialogue: 0,0:00:03.68,0:00:05.34,zh - 黄色,,0,0,0,,我们可以在其中缓存数据
Dialogue: 0,0:00:05.34,0:00:06.80,en - 白色,,0,0,0,,and they're generally easier to use.
Dialogue: 0,0:00:05.34,0:00:06.80,zh - 黄色,,0,0,0,,而且它们通常更容易使用
Dialogue: 0,0:00:07.35,0:00:10.13,en - 白色,,0,0,0,,We'll see now that there's another cool advantage we can confer to them,
Dialogue: 0,0:00:07.35,0:00:10.13,zh - 黄色,,0,0,0,,来看看另一个能赋予它的很酷的优势
Dialogue: 0,0:00:10.40,0:00:14.11,en - 白色,,0,0,0,,which is to allow ourselves to represent the empty list.
Dialogue: 0,0:00:10.40,0:00:14.11,zh - 黄色,,0,0,0,,允许表示空链表
Dialogue: 0,0:00:14.33,0:00:16.49,en - 白色,,0,0,0,,That is, sometimes, when you make lists,
Dialogue: 0,0:00:14.33,0:00:16.49,zh - 黄色,,0,0,0,,有时你创建 List
Dialogue: 0,0:00:16.49,0:00:18.22,en - 白色,,0,0,0,,you don't have anything you want to put in it yet,
Dialogue: 0,0:00:16.49,0:00:18.22,zh - 黄色,,0,0,0,,还没什么要放进去的东西
Dialogue: 0,0:00:18.65,0:00:21.44,en - 白色,,0,0,0,,so it's natural to be able to instantiate an empty list.
Dialogue: 0,0:00:18.65,0:00:21.44,zh - 黄色,,0,0,0,,因此自然应该能够实例化空链表
Dialogue: 0,0:00:22.48,0:00:23.82,en - 白色,,0,0,0,,So let's modify our code.
Dialogue: 0,0:00:22.48,0:00:23.82,zh - 黄色,,0,0,0,,修改一下代码
Dialogue: 0,0:00:24.33,0:00:25.65,en - 白色,,0,0,0,,And we'll start with a constructor
Dialogue: 0,0:00:24.33,0:00:25.65,zh - 黄色,,0,0,0,,从构造函数开始
Dialogue: 0,0:00:27.38,0:00:28.72,en - 白色,,0,0,0,,to get a sense of what that really means.
Dialogue: 0,0:00:27.38,0:00:28.72,zh - 黄色,,0,0,0,,了解那意味着什么
Dialogue: 0,0:00:29.61,0:00:31.52,en - 白色,,0,0,0,,So this constructor, the goal is--
Dialogue: 0,0:00:29.61,0:00:31.52,zh - 黄色,,0,0,0,,这个构造器的目标是...
Dialogue: 0,0:00:32.42,0:00:34.54,en - 白色,,0,0,0,,creates an empty SLList.
Dialogue: 0,0:00:32.42,0:00:34.54,zh - 黄色,,0,0,0,,创建空的 SLList
Dialogue: 0,0:00:37.26,0:00:40.87,en - 白色,,0,0,0,,So that means I need to set my instance variables here to represent an empty list.
Dialogue: 0,0:00:37.26,0:00:40.87,zh - 黄色,,0,0,0,,我们需要在这里设置实例变量来表示空链表
Dialogue: 0,0:00:40.87,0:00:42.79,en - 白色,,0,0,0,,It seems natural to say the size is 0.
Dialogue: 0,0:00:40.87,0:00:42.79,zh - 黄色,,0,0,0,,当然了 size 是0
Dialogue: 0,0:00:43.22,0:00:44.08,en - 白色,,0,0,0,,But what about first?
Dialogue: 0,0:00:43.22,0:00:44.08,zh - 黄色,,0,0,0,,first 呢？
Dialogue: 0,0:00:44.30,0:00:45.28,en - 白色,,0,0,0,,What should first be?
Dialogue: 0,0:00:44.30,0:00:45.28,zh - 黄色,,0,0,0,,first 应该是什么？
Dialogue: 0,0:00:46.25,0:00:48.64,en - 白色,,0,0,0,,Well, rather than making a new int node,
Dialogue: 0,0:00:46.25,0:00:48.64,zh - 黄色,,0,0,0,,与其创建一个 IntNode
Dialogue: 0,0:00:48.89,0:00:51.55,en - 白色,,0,0,0,,one possibility is to simply say that first is null, right?
Dialogue: 0,0:00:48.89,0:00:51.55,zh - 黄色,,0,0,0,,将 first 设为 null 更简单对吗？
Dialogue: 0,0:00:52.16,0:00:53.00,en - 白色,,0,0,0,,There's nothing there.
Dialogue: 0,0:00:52.16,0:00:53.00,zh - 黄色,,0,0,0,,那里什么都没有
Dialogue: 0,0:00:53.72,0:00:56.39,en - 白色,,0,0,0,,And in that way, when we create a new SLList--
Dialogue: 0,0:00:53.72,0:00:56.39,zh - 黄色,,0,0,0,,这样，当我们创建一个新的 SLList 时
Dialogue: 0,0:00:56.39,0:00:57.76,en - 白色,,0,0,0,,OK, well, new SLList.
Dialogue: 0,0:00:56.39,0:00:57.76,zh - 黄色,,0,0,0,,new SLList()
Dialogue: 0,0:00:57.76,0:00:59.08,en - 白色,,0,0,0,,Don't put anything in there at all.
Dialogue: 0,0:00:57.76,0:00:59.08,zh - 黄色,,0,0,0,,别往里面放任何东西
Dialogue: 0,0:00:59.66,0:01:01.02,en - 白色,,0,0,0,,This should be an empty SLList.
Dialogue: 0,0:00:59.66,0:01:01.02,zh - 黄色,,0,0,0,,这是空的 SLList
Dialogue: 0,0:01:01.02,0:01:03.56,en - 白色,,0,0,0,,We put 10 at the front, 5 at the front, and 20 at the back.
Dialogue: 0,0:01:01.02,0:01:03.56,zh - 黄色,,0,0,0,,我们把10放在前面，5放在前面，20放在后面
Dialogue: 0,0:01:04.48,0:01:07.31,en - 白色,,0,0,0,,We tried running this, and it prints out l.size,
Dialogue: 0,0:01:04.48,0:01:07.31,zh - 黄色,,0,0,0,,我们试过了，打印 L.size()
Dialogue: 0,0:01:07.31,0:01:08.79,en - 白色,,0,0,0,,and we get 3, which seems good.
Dialogue: 0,0:01:07.31,0:01:08.79,zh - 黄色,,0,0,0,,得到 3，看起来不错
Dialogue: 0,0:01:09.35,0:01:12.44,en - 白色,,0,0,0,,But who knows. Maybe there's some issue here lurking.
Dialogue: 0,0:01:09.35,0:01:12.44,zh - 黄色,,0,0,0,,但谁知道呢，也许里面藏着一些问题
Dialogue: 0,0:01:13.16,0:01:16.34,en - 白色,,0,0,0,,So let's use the visualizer to make sure everything works.
Dialogue: 0,0:01:13.16,0:01:16.34,zh - 黄色,,0,0,0,,所以使用可视化工具来确保一切正常工作
Dialogue: 0,0:01:18.03,0:01:19.28,en - 白色,,0,0,0,,OK. So we run this code.
Dialogue: 0,0:01:18.03,0:01:19.28,zh - 黄色,,0,0,0,,运行这段代码
Dialogue: 0,0:01:19.98,0:01:21.04,en - 白色,,0,0,0,,We step through a bit.
Dialogue: 0,0:01:19.98,0:01:21.04,zh - 黄色,,0,0,0,,少走几步
Dialogue: 0,0:01:21.33,0:01:22.77,en - 白色,,0,0,0,,And we see that after we've created--
Dialogue: 0,0:01:21.33,0:01:22.77,zh - 黄色,,0,0,0,,我们看到...
Dialogue: 0,0:01:22.77,0:01:24.21,en - 白色,,0,0,0,,after we've finished this line of code,
Dialogue: 0,0:01:22.77,0:01:24.21,zh - 黄色,,0,0,0,,在我们完成这行代码之后
Dialogue: 0,0:01:24.48,0:01:26.13,en - 白色,,0,0,0,,we end up with an empty list.
Dialogue: 0,0:01:24.48,0:01:26.13,zh - 黄色,,0,0,0,,最终会得到一个空链表
Dialogue: 0,0:01:26.59,0:01:30.06,en - 白色,,0,0,0,,L points at this middleman data structure where the size is 0
Dialogue: 0,0:01:26.59,0:01:30.06,zh - 黄色,,0,0,0,,L 指向中间人，size 是0
Dialogue: 0,0:01:30.06,0:01:31.18,en - 白色,,0,0,0,,and there's no actual list.
Dialogue: 0,0:01:30.06,0:01:31.18,zh - 黄色,,0,0,0,,现在没有真正的 List
Dialogue: 0,0:01:31.37,0:01:32.98,en - 白色,,0,0,0,,And notice it doesn't point to anything.
Dialogue: 0,0:01:31.37,0:01:32.98,zh - 黄色,,0,0,0,,注意它没有指向任何东西
Dialogue: 0,0:01:33.84,0:01:37.01,en - 白色,,0,0,0,,And by the time it is done, we end up with a data structure that looks nice.
Dialogue: 0,0:01:33.84,0:01:37.01,zh - 黄色,,0,0,0,,所有执行后，我们最终得到了一个看起来不错的数据结构
Dialogue: 0,0:01:37.38,0:01:39.43,en - 白色,,0,0,0,,Now, first points at a naked recursive list.
Dialogue: 0,0:01:37.38,0:01:39.43,zh - 黄色,,0,0,0,,first 指向一个裸递归 List
Dialogue: 0,0:01:39.63,0:01:40.57,en - 白色,,0,0,0,,The size is 3.
Dialogue: 0,0:01:39.63,0:01:40.57,zh - 黄色,,0,0,0,,size 是3
Dialogue: 0,0:01:40.74,0:01:41.56,en - 白色,,0,0,0,,All seems well.
Dialogue: 0,0:01:40.74,0:01:41.56,zh - 黄色,,0,0,0,,似乎一切正常
Dialogue: 0,0:01:42.55,0:01:45.12,en - 白色,,0,0,0,,Now, it turns out there's actually a very subtle bug,
Dialogue: 0,0:01:42.55,0:01:45.12,zh - 黄色,,0,0,0,,但事实证明这是一个非常微妙的错误
Dialogue: 0,0:01:45.57,0:01:47.74,en - 白色,,0,0,0,,which you're welcome to think about and ponder,
Dialogue: 0,0:01:45.57,0:01:47.74,zh - 黄色,,0,0,0,,欢迎你仔细思考
Dialogue: 0,0:01:47.87,0:01:49.04,en - 白色,,0,0,0,,but I'm just going to spoil,
Dialogue: 0,0:01:47.87,0:01:49.04,zh - 黄色,,0,0,0,,但我马上揭晓
Dialogue: 0,0:01:52.53,0:01:59.12,en - 白色,,0,0,0,,which is that if we try to add to the end of an empty list, we'll run into trouble.
Dialogue: 0,0:01:52.53,0:01:59.12,zh - 黄色,,0,0,0,,如果我们试图在空链表末尾添加，就会遇到麻烦
Dialogue: 0,0:02:00.40,0:02:01.43,en - 白色,,0,0,0,,So let me give you an example.
Dialogue: 0,0:02:00.40,0:02:01.43,zh - 黄色,,0,0,0,,举个例子
Dialogue: 0,0:02:01.64,0:02:02.72,en - 白色,,0,0,0,,We create an empty list,
Dialogue: 0,0:02:01.64,0:02:02.72,zh - 黄色,,0,0,0,,我们创建一个空链表
Dialogue: 0,0:02:03.11,0:02:06.02,en - 白色,,0,0,0,,and then we try and add to the end of it, it crashes.
Dialogue: 0,0:02:03.11,0:02:06.02,zh - 黄色,,0,0,0,,然后我们试着把它加到末尾，就崩溃了
Dialogue: 0,0:02:07.02,0:02:07.78,en - 白色,,0,0,0,,We get an exception.
Dialogue: 0,0:02:07.02,0:02:07.78,zh - 黄色,,0,0,0,,得到异常
Dialogue: 0,0:02:08.61,0:02:10.32,en - 白色,,0,0,0,,And this is something that is not obvious
Dialogue: 0,0:02:08.61,0:02:10.32,zh - 黄色,,0,0,0,,这件事情不明显
Dialogue: 0,0:02:10.32,0:02:12.38,en - 白色,,0,0,0,,looking at the structure of addLast code
Dialogue: 0,0:02:10.32,0:02:12.38,zh - 黄色,,0,0,0,,看看 addLast 的代码
Dialogue: 0,0:02:12.57,0:02:13.87,en - 白色,,0,0,0,,until you think about the following.
Dialogue: 0,0:02:12.57,0:02:13.87,zh - 黄色,,0,0,0,,直到你想到以下几点
Dialogue: 0,0:02:14.68,0:02:15.99,en - 白色,,0,0,0,,Suppose we have an empty list.
Dialogue: 0,0:02:14.68,0:02:15.99,zh - 黄色,,0,0,0,,假设我们有一个空链表
Dialogue: 0,0:02:16.68,0:02:20.18,en - 白色,,0,0,0,,If first is null, well then p gets set equal to null.
Dialogue: 0,0:02:16.68,0:02:20.18,zh - 黄色,,0,0,0,,如果 first 为 null，那么 p 被设置为 null
Dialogue: 0,0:02:20.53,0:02:22.77,en - 白色,,0,0,0,,And then we say, while p.next is not equal to null.
Dialogue: 0,0:02:20.53,0:02:22.77,zh - 黄色,,0,0,0,,而 p.next != null
Dialogue: 0,0:02:22.77,0:02:23.77,en - 白色,,0,0,0,,Well, p is null.
Dialogue: 0,0:02:22.77,0:02:23.77,zh - 黄色,,0,0,0,,p 是 null
Dialogue: 0,0:02:24.12,0:02:25.92,en - 白色,,0,0,0,,So you try to go to the nullth position,
Dialogue: 0,0:02:24.12,0:02:25.92,zh - 黄色,,0,0,0,,尝试访问 null 的位置
Dialogue: 0,0:02:26.25,0:02:30.48,en - 白色,,0,0,0,,go to the next variable of null, and that causes a null pointer exception.
Dialogue: 0,0:02:26.25,0:02:30.48,zh - 黄色,,0,0,0,,访问 null 的 next 变量，这会导致 null 指针异常
Dialogue: 0,0:02:30.48,0:02:34.74,en - 白色,,0,0,0,,You can't ask-- you can't go to a memory location null and try and get next.
Dialogue: 0,0:02:30.48,0:02:34.74,zh - 黄色,,0,0,0,,你不能访问 null 的内存位置并且得到 next
Dialogue: 0,0:02:34.94,0:02:36.16,en - 白色,,0,0,0,,It doesn't make sense.
Dialogue: 0,0:02:34.94,0:02:36.16,zh - 黄色,,0,0,0,,这没有意义
Dialogue: 0,0:02:37.83,0:02:40.68,en - 白色,,0,0,0,,So this bug is not obvious.
Dialogue: 0,0:02:37.83,0:02:40.68,zh - 黄色,,0,0,0,,所以这个错误并不明显
Dialogue: 0,0:02:40.68,0:02:41.98,en - 白色,,0,0,0,,It's totally easy.
Dialogue: 0,0:02:40.68,0:02:41.98,zh - 黄色,,0,0,0,,这非常简单
Dialogue: 0,0:02:41.98,0:02:46.05,en - 白色,,0,0,0,,Like, the only reason I know this bug exists is because I taught this lecture before,
Dialogue: 0,0:02:41.98,0:02:46.05,zh - 黄色,,0,0,0,,我知道这个 bug 的原因是我之前教过这门课
Dialogue: 0,0:02:46.05,0:02:47.33,en - 白色,,0,0,0,,and I've thought about this a lot,
Dialogue: 0,0:02:46.05,0:02:47.33,zh - 黄色,,0,0,0,,我想了很久
Dialogue: 0,0:02:47.65,0:02:49.59,en - 白色,,0,0,0,,and it's not anything that would be at all obvious to you.
Dialogue: 0,0:02:47.65,0:02:49.59,zh - 黄色,,0,0,0,,对你来说，这并不是什么显而易见的事情
Dialogue: 0,0:02:50.07,0:02:54.89,en - 白色,,0,0,0,,And in a later lecture, again, we'll talk about how to test your code in a more robust way.
Dialogue: 0,0:02:50.07,0:02:54.89,zh - 黄色,,0,0,0,,在后面的课程中，我们将再次讨论如何更健壮地测试你的代码
Dialogue: 0,0:02:54.89,0:02:57.06,en - 白色,,0,0,0,,But here, I'm just giving away that this bug exists.
Dialogue: 0,0:02:54.89,0:02:57.06,zh - 黄色,,0,0,0,,但在这里，我只是透露这个 bug 的存在
Dialogue: 0,0:02:57.06,0:02:58.14,en - 白色,,0,0,0,,So your goal now--
Dialogue: 0,0:02:57.06,0:02:58.14,zh - 黄色,,0,0,0,,所以你现在的目标是...
Dialogue: 0,0:02:58.44,0:02:59.60,en - 白色,,0,0,0,,to make a long story short--
Dialogue: 0,0:02:58.44,0:02:59.60,zh - 黄色,,0,0,0,,长话短说
Dialogue: 0,0:02:59.91,0:03:01.20,en - 白色,,0,0,0,,is to fix this bug.
Dialogue: 0,0:02:59.91,0:03:01.20,zh - 黄色,,0,0,0,,修复这个 bug
Dialogue: 0,0:03:01.20,0:03:03.07,en - 白色,,0,0,0,,Make it so that this code right here works.
Dialogue: 0,0:03:01.20,0:03:03.07,zh - 黄色,,0,0,0,,这样才能让这里的代码正常工作
Dialogue: 0,0:03:03.40,0:03:06.41,en - 白色,,0,0,0,,So I'll give you a chance to ponder this to think about how you can change addLast,
Dialogue: 0,0:03:03.40,0:03:06.41,zh - 黄色,,0,0,0,,给你们一个机会来思考如何改变 addLast
Dialogue: 0,0:03:06.66,0:03:07.90,en - 白色,,0,0,0,,and I'll spoil it in a moment.
Dialogue: 0,0:03:06.66,0:03:07.90,zh - 黄色,,0,0,0,,一会揭晓
Dialogue: 0,0:03:08.49,0:03:10.69,en - 白色,,0,0,0,,One possible solution-- but not the only one--
Dialogue: 0,0:03:08.49,0:03:10.69,zh - 黄色,,0,0,0,,一个可能的解决方案，但不是唯一的
Dialogue: 0,0:03:11.18,0:03:15.29,en - 白色,,0,0,0,,is to say, OK, well, the problem occurs if the first is equal to null.
Dialogue: 0,0:03:11.18,0:03:15.29,zh - 黄色,,0,0,0,,就是说，如果 first 是 null，问题就发生了
Dialogue: 0,0:03:15.53,0:03:17.13,en - 白色,,0,0,0,,So I'll just say, if first is equal to null,
Dialogue: 0,0:03:15.53,0:03:17.13,zh - 黄色,,0,0,0,,所以如果 first == null
Dialogue: 0,0:03:17.13,0:03:18.06,en - 白色,,0,0,0,,do something special.
Dialogue: 0,0:03:17.13,0:03:18.06,zh - 黄色,,0,0,0,,做点特别的事
Dialogue: 0,0:03:18.51,0:03:19.21,en - 白色,,0,0,0,,What should I do?
Dialogue: 0,0:03:18.51,0:03:19.21,zh - 黄色,,0,0,0,,怎么做？
Dialogue: 0,0:03:19.57,0:03:23.55,en - 白色,,0,0,0,,Well, in that case, rather than changing the existing list,
Dialogue: 0,0:03:19.57,0:03:23.55,zh - 黄色,,0,0,0,,在这种情况下，与其改变现有的 List
Dialogue: 0,0:03:23.55,0:03:27.01,en - 白色,,0,0,0,,I have to actually create a new one because there's nothing there.
Dialogue: 0,0:03:23.55,0:03:27.01,zh - 黄色,,0,0,0,,最好创建一个新的，因为那里什么都没有
Dialogue: 0,0:03:27.63,0:03:29.04,en - 白色,,0,0,0,,I'll have x null.
Dialogue: 0,0:03:27.63,0:03:29.04,zh - 黄色,,0,0,0,,参数是 x 和 null
Dialogue: 0,0:03:29.58,0:03:31.65,en - 白色,,0,0,0,,And then I don't want to do the rest, so I'll return.
Dialogue: 0,0:03:29.58,0:03:31.65,zh - 黄色,,0,0,0,,其他的不执行了，直接返回
Dialogue: 0,0:03:32.07,0:03:35.02,en - 白色,,0,0,0,,So this code here, if I run it, it works fine, right?
Dialogue: 0,0:03:32.07,0:03:35.02,zh - 黄色,,0,0,0,,运行这些代码，工作得很好
Dialogue: 0,0:03:35.02,0:03:37.71,en - 白色,,0,0,0,,And I add to the end of list, it is no longer crashing.
Dialogue: 0,0:03:35.02,0:03:37.71,zh - 黄色,,0,0,0,,在 List 末尾添加，它就不再崩溃了
Dialogue: 0,0:03:37.71,0:03:40.47,en - 白色,,0,0,0,,And this fix-- not that I've proven it to you,
Dialogue: 0,0:03:37.71,0:03:40.47,zh - 黄色,,0,0,0,,这个解决方法...我没证明过
Dialogue: 0,0:03:40.71,0:03:42.08,en - 白色,,0,0,0,,but it does work perfectly well.
Dialogue: 0,0:03:40.71,0:03:42.08,zh - 黄色,,0,0,0,,但它确实工作得很好
Dialogue: 0,0:03:42.99,0:03:45.02,en - 白色,,0,0,0,,So that's one way to approach this problem.
Dialogue: 0,0:03:42.99,0:03:45.02,zh - 黄色,,0,0,0,,所以这是解决这个问题的一种方式
Dialogue: 0,0:03:45.63,0:03:47.21,en - 白色,,0,0,0,,But it's a little ugly.
Dialogue: 0,0:03:45.63,0:03:47.21,zh - 黄色,,0,0,0,,但是有点难看
Dialogue: 0,0:03:47.49,0:03:48.63,en - 白色,,0,0,0,,Look at our addLast method.
Dialogue: 0,0:03:47.49,0:03:48.63,zh - 黄色,,0,0,0,,看看我们的 addLast 方法
Dialogue: 0,0:03:48.63,0:03:50.09,en - 白色,,0,0,0,,I mean, it's just getting a little bloated.
Dialogue: 0,0:03:48.63,0:03:50.09,zh - 黄色,,0,0,0,,它变得有点臃肿了
Dialogue: 0,0:03:50.92,0:03:56.48,en - 白色,,0,0,0,,So what I'm going to do next it just is going to describe an alternate strategy that I think is better.
Dialogue: 0,0:03:50.92,0:03:56.48,zh - 黄色,,0,0,0,,所以下一步要做的就是描述一种我认为更好的替代策略
Dialogue: 0,0:03:53.48,0:03:56.48,翻译人员专属 - 片尾（左上角）,,0,0,0,,翻译：@隐秀_（seriouszyx）
